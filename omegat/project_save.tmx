<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="3.5.1" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>(Do the same as with ``admin/base_site.html`` in the previous section -- copy it from the default directory to your custom template directory.) Edit the file, and you'll see it uses a template variable called ``app_list``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020615Z" creationid="miurahr" creationdate="20150809T020615Z">
        <seg> (前セクションで "admin/base_site.html" にしたことと同じことをしてください。デフォルトのディレクトリからコピーして、カスタムテンプレートのディレクトリに配置してください)。編集してみると "app_list" というテンプレート変数が使われているのが見えるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(If none of them matches, Django calls a special-case 404 view.) This is blazingly fast, because the regular expressions are compiled at load time.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015313Z" creationid="miurahr" creationdate="20150809T015313Z">
        <seg>(もしそれらのどれとも一致しなかった時、 Django は特殊ケースである404ビューを呼び出します。)正規表現はロード時にコンパイルされるため、これらは非常に高速に動作します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(where ``django`` is the directory of your clone that contains ``setup.py``) to link your cloned checkout into a virtual environment.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050953Z" creationid="miurahr" creationdate="20150808T050705Z">
        <seg>(ここで``django`` は、 ``setup.py`` が含まれている、複製のディレクトリです) このコマンドにより、仮想環境内にこの複製をインストールできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>**Keep in mind that while we'll be using an older revision of Django's trunk for the purposes of the tutorial below, you should always use the current development revision of Django when working on your own patch for a ticket!**</seg>
      </tuv>
      <tuv lang="JA">
        <seg>**チュートリアルでは trunk ではない古いリビジョンの Django を使用しますが、自分のパッチを作成する場合は Django の最新の開発版を使用する必要があります!**</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:class:`~django.db.models.CharField`, for example, requires that you give it a :attr:`~django.db.models.CharField.max_length`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015756Z" creationid="miurahr" creationdate="20150809T015756Z">
        <seg>例えば `~django.db.models.CharField` には :attr:`~django.db.models.CharField.max_length` を指定する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:doc:`The release of Django 1.0 &lt;/releases/1.0&gt;` comes with a promise of API stability and forwards-compatibility.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T053337Z" creationid="miurahr" creationdate="20150813T053337Z">
        <seg>:doc:`Django１．０リリース &lt;/releases/1.0&gt;` は、API安定性と前方互換性の保証とともになされました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:func:`~django.conf.urls.url` argument: kwargs</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:func:`~django.conf.urls.url` 引数: kwargs</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:func:`~django.conf.urls.url` argument: name</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:func:`~django.conf.urls.url` 引数: name</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:func:`~django.conf.urls.url` argument: regex</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:func:`~django.conf.urls.url` 引数: regex</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:func:`~django.conf.urls.url` argument: view</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:func:`~django.conf.urls.url` 引数: view</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:mod:`django.contrib.auth` -- An authentication system.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:mod:`django.contrib.auth` - 認証システム</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:mod:`django.contrib.contenttypes` -- A framework for content types.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:mod:`django.contrib.contenttypes` - コンテンツタイプフレームワーク</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:mod:`django.contrib.messages` -- A messaging framework.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:mod:`django.contrib.messages` - メッセージフレームワーク</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:mod:`django.contrib.sessions` -- A session framework.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:mod:`django.contrib.sessions` - セッションフレームワーク</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:mod:`django.contrib.staticfiles` -- A framework for managing static files.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:mod:`django.contrib.staticfiles` - 静的ファイルの管理フレームワーク</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:ref:`Install an official release &lt;installing-official-release&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235252Z" creationid="miurahr" creationdate="20150811T235146Z">
        <seg>:ref:`正式リリースのインストール&lt;installing-official-release&gt;`。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:ref:`Install the latest development version &lt;installing-development-version&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235248Z" creationid="miurahr" creationdate="20150811T235248Z">
        <seg>:ref:`最新の開発版のインストール&lt;installing-development-version&gt;`。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A :class:`~django.db.models.Field` can also have various optional arguments; in this case, we've set the :attr:`~django.db.models.Field.default` value of ``votes`` to 0.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:class:`~django.db.models.Field` はいつくかオプションの引数も取れます。今回の場合、 ```votes`` の :attr:`~django.db.models.Field.default` 値を 0 に設定しました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A :doc:`caching framework &lt;/topics/cache&gt;` that integrates with memcached or other backends.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>memcached などのバックエンドを組み込んだ  :doc:`キャッシュフレームワーク &lt;/topics/cache&gt;` 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A :doc:`syndication framework &lt;/ref/contrib/syndication&gt;` that makes creating RSS and Atom feeds as easy as writing a small Python class.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>小さな Python クラスを書くだけで簡単に RSS や Atom フィードを生成できる :doc:`配信フィードフレームワーク &lt;/ref/contrib/syndication&gt;` 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A URL pattern is simply the general form of a URL - for example: ``/newsarchive/&lt;year&gt;/&lt;month&gt;/``.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>URLパターンはURLをシンプルに一般化したものです。例えば "/newsarchive/&lt;year&gt;/&lt;month&gt;/" などです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A clean, elegant URL scheme is an important detail in a high-quality Web application.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015207Z" creationid="miurahr" creationdate="20150809T015207Z">
        <seg>すっきりとして洗練された URL スキームは、高品質な Web アプリケーションを実 現する上で重要な要素です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A dynamic admin interface: it's not just scaffolding -- it's the whole house</seg>
      </tuv>
      <tuv lang="JA">
        <seg>作業場 (scaffold) ではなく完成品 (whole house) の、動的な admin インタフェース</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A good first look at writing tests for Django can be found in the documentation on :doc:`/topics/testing/overview`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234117Z" creationid="miurahr" creationdate="20150811T234117Z">
        <seg>Djangoのテストを書くために最初に見るべきものは、:doc:`/topics/testing/overview`にある文書です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A good way to do this is to write your new tests first, before making any changes to the code.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233855Z" creationid="miurahr" creationdate="20150811T233855Z">
        <seg>れをするには､コードに変更を加える前に先にテストを書くのが良いでしょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A public site that lets people view polls and vote in them.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ユーザが投票したり結果を表示したりできる公開用サイト</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A quick rundown:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>簡単に説明:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A regression test should be written in such a way that it will fail while the bug still exists and pass once the bug has been fixed.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233815Z" creationid="miurahr" creationdate="20150811T233815Z">
        <seg>レグレッションテストは､バグが存在しているときに落ちるように書き､バグが修正された後にパスするように書かれるべきです｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A table of contents for your app, it contains a simple mapping between URL patterns and Python callback functions.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015213Z" creationid="miurahr" creationdate="20150809T015213Z">
        <seg>URLconf はいわばアプリケーションの目次にあたり、 URL のパターンを Python のコールバック関数に対応づけています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>API stability</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T053250Z" creationid="miurahr" creationdate="20150813T053250Z">
        <seg>API安定性</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Activating models</seg>
      </tuv>
      <tuv lang="JA">
        <seg>モデルを有効にする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add the following code on line 269 right before the ``AdminFileWidgetTest`` class::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233122Z" creationid="miurahr" creationdate="20150811T233122Z">
        <seg>次のコードを２６９行の ``AdminFileWidgetTest`` クラスの直前に追加してください::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add the following on line 925 of ``django/docs/ref/models/fields.txt`` beneath the existing docs for ``URLField``::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052528Z" creationid="miurahr" creationdate="20150808T052528Z">
        <seg>以下のコードを ``django/docs/ref/models/fields.txt`` の 925 行目にある ``URLField`` のドキュメントの下に追記してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add the following to ``polls/views.py``:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021041Z" creationid="miurahr" creationdate="20150809T021041Z">
        <seg>以下を ``polls/views.py`` に追加してください:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Add two more test methods to the same class, to test the behavior of the method more comprehensively:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T061045Z" creationid="miurahr" creationdate="20150817T061045Z">
        <seg>Add two more test methods to the same class, to test the behavior of the method more comprehensively:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding related objects</seg>
      </tuv>
      <tuv lang="JA">
        <seg>リレーションを張ったオブジェクトの追加</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Advanced tutorial: How to write reusable apps</seg>
      </tuv>
      <tuv lang="JA">
        <seg>高度なチュートリアル: 再利用可能アプリの書き方</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After a ticket has a patch, it needs to be reviewed by a second set of eyes.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014648Z" creationid="miurahr" creationdate="20150809T014648Z">
        <seg>チケットにパッチが追加されたあとは、別の人間の目でレビューされる必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After all, a regression test that passes regardless of whether a bug is present is not very helpful at preventing that bug from reoccurring down the road.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233924Z" creationid="miurahr" creationdate="20150811T233924Z">
        <seg>ともかく､バグが存在していようとも通るテストは将来バグが再発するのを防ぐのに､何の役にもたちません｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After all, our polls application is working quite happily now; going through the trouble of creating automated tests is not going to make it work any better.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T055234Z" creationid="miurahr" creationdate="20150817T055234Z">
        <seg>After all, our polls application is working quite happily now; going through the trouble of creating automated tests is not going to make it work any better.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After all, the index is probably the most important page of the admin, and it should be easy to use.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020555Z" creationid="miurahr" creationdate="20150809T020555Z">
        <seg>なんといっても index ページは admin のなかで最も重要なページで、使いやすくあるべきです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After reading those, if you want something a little meatier to sink your teeth into, there's always the `Python unittest documentation`__.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Dive Into Python を読んだあと､もう少し情報が欲しい場合は `Python のユニットテスト`__ のドキュメントを参照してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After the previous tutorials, our project should look like this::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>前のチュートリアルを終えると、プロジェクトはこのようになっていたはずです::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After those, if you're still hungry for more information about contributing, you can always browse through the rest of :doc:`Django's documentation on contributing&lt;/internals/contributing/index&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014322Z" creationid="miurahr" creationdate="20150809T014322Z">
        <seg>貢献について､より多くの情報を知りたいなら､ :doc:`貢献についての Django のドキュメント &lt;/internals/contributing/index&gt;` を参照してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After uploading a patch or submitting a pull request, be sure to update the ticket metadata by setting the flags on the ticket to say "has patch", "doesn't need tests", etc, so others can find it for review.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014713Z" creationid="miurahr" creationdate="20150809T014713Z">
        <seg>パッチをアップロードしたりプルリクエストを送信したあとは、チケットのメタデータから "has patch" フラグを設定してください。"doesn't need tests" や、その他のメタデータはレビューのためにあります。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>After writing your tests, you then run them to make sure that they do indeed fail (since you haven't fixed that bug or added that feature yet).</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233905Z" creationid="miurahr" creationdate="20150811T233905Z">
        <seg>テストを書いた後には､テストを走らせて確かに落ちることを確認します (バグ修正や昨日の追加はまだしてないので落ちます)｡ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Again, don't worry if you can't understand the template language -- we'll cover that in more detail in Tutorial 3.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020646Z" creationid="miurahr" creationdate="20150809T020646Z">
        <seg>しつこいようですが、テンプレート言語の理解できなくても心配しないでください。より詳細にはチュートリアル3でカバーされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All Django wants is that :class:`~django.http.HttpResponse`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012141Z" creationid="miurahr" creationdate="20150809T012052Z">
        <seg>Django にとって必要なのは :class:`~django.http.HttpResponse` です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also note that the column header for ``was_published_recently`` is, by default, the name of the method (with underscores replaced with spaces), and that each line contains the string representation of the output.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020322Z" creationid="miurahr" creationdate="20150809T020322Z">
        <seg>``was_published_recently`` のカラムヘッダのデフォルト値がメソッドの名前になっている (アンダースコアは空白に置き換わっている)こと、各行が戻り値の文字列となっていることにも注意して下さい。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, releases of third-party packages are less likely to be compatible with the development version than with the latest stable release.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235647Z" creationid="miurahr" creationdate="20150811T235647Z">
        <seg>また、サードパーティパッケージの公開版は、最新の安定版の互換性に比べれば、開発版とも互換性が下がってしまうでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, the O'Reilly book "Mastering Regular Expressions" by Jeffrey Friedl is fantastic.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021817Z" creationid="miurahr" creationdate="20150809T021817Z">
        <seg>オライリーから出版されている Jeffery Friendl の "Mastering Reglar Expressions" も参考になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although you can use Django without a database, it comes with an `object-relational mapper`_ in which you describe your database layout in Python code.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>データベースなしで Django を使うこともできますが、 Django には Python コードでデータベースのレイアウトを記述した `オブジェクトリレーショナルマッパー`_ (object-relational mapper) が付属しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Always refer to the documentation that corresponds to the version of Django you're using!</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235719Z" creationid="miurahr" creationdate="20150811T235719Z">
        <seg>常に、使っているDjangoのバージョンに関する文書を参照するようにしてください！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Amend URLconf</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021404Z" creationid="miurahr" creationdate="20150809T021253Z">
        <seg>URLconfの追加</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Amend views</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021358Z" creationid="miurahr" creationdate="20150809T021358Z">
        <seg>Viewsの追加</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An admin site that lets you add, change and delete polls.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>投票項目の追加、変更、削除を行うための管理 (admin) サイト</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And now we have three tests that confirm that ``Question.was_published_recently()`` returns sensible values for past, recent, and future questions.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T134749Z" creationid="miurahr" creationdate="20150817T134749Z">
        <seg>And now we have three tests that confirm that ``Question.was_published_recently()`` returns sensible values for past, recent, and future questions.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>And there's no need to add URL cruft such as ``.html`` -- unless you want to, in which case you can do something like this::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022934Z" creationid="miurahr" creationdate="20150809T022934Z">
        <seg>また、 ``.html`` のような文字列を URL に追加する必要もありません。ただし、次のようにすれば、表現できます::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arbitrary keyword arguments can be passed in a dictionary to the target view.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021940Z" creationid="miurahr" creationdate="20150809T021940Z">
        <seg>任意のキーワード引数を辞書として対象のビューに渡せます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As long as you don't see any failures, you're good to go.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052447Z" creationid="miurahr" creationdate="20150808T052447Z">
        <seg>テストが失敗しなければ､先に進みましょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Aside from the HTML generated by the server, web applications generally need to serve additional files — such as images, JavaScript, or CSS — necessary to render the complete web page.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021604Z" creationid="miurahr" creationdate="20150809T021604Z">
        <seg>サーバで生成するHTML以外に、Webアプリケーションは一般的に完全なWebページをレンダリングするために、画像、JavaScript、CSSなど必要なファイルを提供する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Basic testing strategies</seg>
      </tuv>
      <tuv lang="JA">
        <seg>基本的なテスト方針</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because Django was developed in a fast-paced newsroom environment, it was designed to make common Web-development tasks fast and easy.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015101Z" creationid="miurahr" creationdate="20150809T015101Z">
        <seg>Django は変転の激しいニュースルーム環境で開発された経緯から、よくある Web 開発タスクを迅速かつ簡単化するように設計されました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Because the URL patterns are regular expressions, there really is no limit on what you can do with them.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022912Z" creationid="miurahr" creationdate="20150809T022912Z">
        <seg>URL パターンは正規表現であるため、正規表現で実現できる限り制限はありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before we make those changes though, we're going to write a couple tests to verify that our modification functions correctly and continues to function correctly in the future.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051620Z" creationid="miurahr" creationdate="20150808T051620Z">
        <seg>変更を加える前に､変更が正しく動作し､これからも動作し続けることを確認するためにテストをいくつか追加します｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before you can use Django, you'll need to get it installed.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014818Z" creationid="miurahr" creationdate="20150809T014818Z">
        <seg>Django を使う前に、インストールをする必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Before you get too into writing patches for Django, there's a little more information on contributing that you should probably take a look at:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django へのパッチを書き始める前に､貢献するために見ておいたほうがいい情報があります:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Being a Python Web framework, Django requires Python.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234757Z" creationid="miurahr" creationdate="20150811T234757Z">
        <seg>PythonのWebフレームワークであるため、DjangoにはPythonが必要です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Blog homepage -- displays the latest few entries.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Blog ホームページ - 最新エントリーをいくつか表示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both of these are considered to be test failures.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051155Z" creationid="miurahr" creationdate="20150808T051155Z">
        <seg>これらは共にテスト失敗となります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But first we need to tell our project that the ``polls`` app is installed.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>でもその前に ``polls`` アプリケーションをインストールしたことをプロジェクトに教えてやる必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But if it grew more sophisticated and required modification of Django's standard admin templates for some of its functionality, it would be more sensible to modify the *application's* templates, rather than those in the *project*.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020443Z" creationid="miurahr" creationdate="20150809T020443Z">
        <seg>しかしより凝ったものに成長したり、機能のため標準の admin テンプレートの変更は必要となった場合、 *アプリケーションの* テンプレートを編集するのは、 *プロジェクト* のそれを編集するより賢い選択になるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But if you don't, `Dive Into Python`__ is a fantastic (and free) online book for beginning Python programmers.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233334Z" creationid="miurahr" creationdate="20150811T233334Z">
        <seg>もしそうでない場合、 `Dive Into Python`__ は Python プログラマーになるための素晴らしい (かつ無料の) オンラインドキュメントです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But this testing thing looks kinda hard...</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051814Z" creationid="miurahr" creationdate="20150808T051657Z">
        <seg>しかしテストをすることはちょっとむずかしい...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But where's our poll app?</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012344Z" creationid="miurahr" creationdate="20150809T012344Z">
        <seg>ところで、 polls アプリはどこにあるんでしょう？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But, don't do that.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023027Z" creationid="miurahr" creationdate="20150809T022954Z">
        <seg>とはいえ、やめてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, :setting:`INSTALLED_APPS` contains the following apps, all of which come with Django:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>デフォルトでは、 :settings:`INSTALLED_APPS` には以下のアプリケーションがはいっています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, it displays all the apps in :setting:`INSTALLED_APPS` that have been registered with the admin application, in alphabetical order.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020544Z" creationid="miurahr" creationdate="20150809T020544Z">
        <seg>デフォルトでは、 :settings:`INSTALLED_APPS` の全てのアプリを表示します。つまり admin アプリケーションに登録されたアプリケーションを、アルファベット順に表示されるということです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the :djadmin:`runserver` command starts the development server on the internal IP at port 8000.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>デフォルトでは :djadmin:`runserver` コマンドは内部 IP のポート 8000 で起動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By the end of this tutorial, you should have a basic understanding of both the tools and the processes involved.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050313Z" creationid="miurahr" creationdate="20150808T050313Z">
        <seg>このチュートリアルを終えると、関連するツールとプロセス両方についての基本的な理解を得ることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Bypassing manage.py</seg>
      </tuv>
      <tuv lang="JA">
        <seg>manage.py を使わずに済ませる方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change the "Date published" by clicking the "Today" and "Now" shortcuts.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012557Z" creationid="miurahr" creationdate="20150809T012557Z">
        <seg>「今日」や「現在」ショートカットをクリックして、「Date published」を変更してみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changing the port</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ポート番号の変更</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comment action -- handles posting comments to a given entry.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>コメント投稿 - エントリーに対するコメントの投稿を受付</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Congratulations, you've generated your very first Django patch!</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053006Z" creationid="miurahr" creationdate="20150808T052944Z">
        <seg>おめでとうございます!Django への最初のパッチができました!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consequently, we'll be using the revision of Django just prior to that, `commit 39f5bc7fc3a4bb43ed8a1358b17fe0521a1a63ac`__.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014358Z" creationid="miurahr" creationdate="20150809T014358Z">
        <seg>よって `commit 39f5bc7fc3a4bb43ed8a1358b17fe0521a1a63ac`__ が適用される前の Django のリビジョンを使用します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contributing back to Django itself is the best way to see your own concerns addressed.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150729T004629Z" creationid="miurahr" creationdate="20150729T004629Z">
        <seg>その願いを叶える最適な方法は Django 自体への貢献です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Contributing doesn't necessarily always mean writing a patch from scratch.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014716Z" creationid="miurahr" creationdate="20150809T014716Z">
        <seg>貢献する際にはいつもスクラッチからパッチを書くというわけではありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Convert the URLconf.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021222Z" creationid="miurahr" creationdate="20150809T021222Z">
        <seg>そのURLconfを変換する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Create a database schema (``CREATE TABLE`` statements) for this app.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>アプリケーションのデータベーススキーマを作成 (``CREATE TABLE`` 文を実行) できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating a project</seg>
      </tuv>
      <tuv lang="JA">
        <seg>プロジェクトを作成する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating an admin user</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T024638Z" creationid="miurahr" creationdate="20150809T024638Z">
        <seg>管理者ユーザの作成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creating models</seg>
      </tuv>
      <tuv lang="JA">
        <seg>モデルの作成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customize the admin change list</seg>
      </tuv>
      <tuv lang="JA">
        <seg>管理サイトのチェンジリストページをカスタマイズする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customize the admin form</seg>
      </tuv>
      <tuv lang="JA">
        <seg>admin フォームのカスタマイズ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customize the admin index page</seg>
      </tuv>
      <tuv lang="JA">
        <seg>admin index ページをカスタムする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customize the admin look and feel</seg>
      </tuv>
      <tuv lang="JA">
        <seg>管理サイトのルック &amp; フィールをカスタマイズする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customize your *app's* look and feel</seg>
      </tuv>
      <tuv lang="JA">
        <seg>*アプリ* の構造をカスタマイズする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customizing your *application's* templates</seg>
      </tuv>
      <tuv lang="JA">
        <seg>*アプリケーション用の* テンプレートをカスタマイズする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Customizing your *project's* templates</seg>
      </tuv>
      <tuv lang="JA">
        <seg>*プロジェクト* テンプレートをカスタムする。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Database setup</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Database の設定</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dates get a "Today" shortcut and calendar popup, and times get a "Now" shortcut and a convenient popup that lists commonly entered times.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012517Z" creationid="miurahr" creationdate="20150809T012517Z">
        <seg>日付 (dates) のカラムには「今日 (today)」 へのショートカットとカレンダーポップアップボタンがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Day-based archive page -- displays all entries in the given day.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>日ごとのアーカイブページ - 指定された日の全てのエントリーを表示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Delete -- Displays a delete confirmation page.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>削除 (Delete) – 削除確認ページを表示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Design your URLs</seg>
      </tuv>
      <tuv lang="JA">
        <seg>URL を設計する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Design your model</seg>
      </tuv>
      <tuv lang="JA">
        <seg>モデルの設計</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Design your templates</seg>
      </tuv>
      <tuv lang="JA">
        <seg>テンプレートを設計する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dive Into Python (a free online book for beginning Python developers) includes a great `introduction to Unit Testing`__.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Dive Into Python (Python初心者のための､オンラインの無料の本) では素晴らしい `初めてのユニットテスト`__ という章があります｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django apps are "pluggable": You can use an app in multiple projects, and you can distribute apps, because they don't have to be tied to a given Django installation.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django アプリケーションは「プラガブル (pluggable)」です。アプリケーショ ンは特定の Django インストールに結び付いていないので、アプリケーションを複数のプロジェクトで使ったり、単体で配布したりできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django at a glance</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django の概要</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django encourages beautiful URL design and doesn't put any cruft in URLs, like ``.php`` or ``.asp``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015209Z" creationid="miurahr" creationdate="20150809T015209Z">
        <seg>Django は美しい URL の設計を助け、 ``.php`` や ``.asp`` のようなお粗末なゴミを URL に入れさせません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django has a template search path, which allows you to minimize redundancy among templates.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001521Z" creationid="miurahr" creationdate="20150812T001521Z">
        <seg>テンプレート間の冗長を最小化させられるように、Djangoにはテンプレートの検索パスがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django is 100% Python, so if you've got minimal comfort with Python you'll probably get a lot more out of Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014808Z" creationid="miurahr" creationdate="20150809T014808Z">
        <seg>Django は 100% Python です。 ほんの最小限 Python を理解するだけで Django をより深く理解できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django on Jython</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django on Jython</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django solves the problem of creating a unified interface for site administrators to edit content.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023648Z" creationid="miurahr" creationdate="20150809T023648Z">
        <seg>Django は、サイト管理者向けの一元化されたコンテンツ編集インタフェースを提供しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django starts at the first regular expression and makes its way down the list,  comparing the requested URL against each regular expression until it finds one that matches.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021727Z" creationid="miurahr" creationdate="20150809T021727Z">
        <seg>Django ははじめの正規表現から開始し、リストを順に下に見ていきます。リクエストされたURLと各正規表現を、マッチするものが見つかるまで比較します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django was written in a newsroom environment, with a very clear separation between "content publishers" and the "public" site.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023625Z" creationid="miurahr" creationdate="20150809T023625Z">
        <seg>Django はニュースルーム環境で開発されました。ニュースルーム環境では、 「コンテンツの作成者 (content publisher)」と「公開 (public) 」サイトをきわめて明確に区別しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django will find the match at ``'^polls/'``</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django は ``'^polls/'`` へのマッチを検出します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Django's entire test suite has over 4800 different tests, so it can take anywhere from 5 to 15 minutes to run, depending on the speed of your computer.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051058Z" creationid="miurahr" creationdate="20150808T051058Z">
        <seg>Django 全体のテストスイートは 4800 以上のテストが含まれており、コンピュータの速度により 5 〜 15分程度かかります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Doesn't match what you see?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>自分のレイアウトと違う場合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dots indicate passing tests.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051220Z" creationid="miurahr" creationdate="20150808T051220Z">
        <seg>ドットはテストの成功を表しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Download the Django source code repository using the following command::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>以下のコマンドで Django のソースコードリポジトリをダウンロードします::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each :class:`~django.db.models.DateTimeField` gets free JavaScript shortcuts.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012458Z" creationid="miurahr" creationdate="20150809T012458Z">
        <seg>各 :class:`~django.db.models.DateTimeField` は JavaScript ショートカットがついています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each field is represented by an instance of a :class:`~django.db.models.Field` class -- e.g., :class:`~django.db.models.CharField` for character fields and :class:`~django.db.models.DateTimeField` for datetimes.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015847Z" creationid="miurahr" creationdate="20150809T015847Z">
        <seg>各フィールドは :class:`~django.db.models.Field` クラスのインスタンスとして表現されています。例えば、 :class:`~django.db.models.CharField` は文字のフィールドで、 :class:`~django.db.models.DateTimeField` は日時フィー ルドです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each type of field knows how to display itself in the Django admin.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012450Z" creationid="miurahr" creationdate="20150809T012450Z">
        <seg>各種のフィールドには Django 管理サイトでデー タを表示する方法が定義されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each view gets passed a request object -- which contains request metadata -- and the values captured in the regex.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015343Z" creationid="miurahr" creationdate="20150809T015343Z">
        <seg>各ビューは、リクエストのメタデータを含むリクエストオブジェクトと、正規表現でキャプチャされた値を受け取ります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each view is responsible for doing one of two things: Returning an :class:`~django.http.HttpResponse` object containing the content for the requested page, or raising an exception such as :class:`~django.http.Http404`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015422Z" creationid="miurahr" creationdate="20150809T015422Z">
        <seg>各ビューには二つの役割があります: 一つはリクエストされたページのコ ンテンツを含む :class:`~django.http.HttpResponse` オブジェクトを返すこと、もう一つは :class:`~django.http.Http404` のような例外の送出です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each view is responsible for doing one of two things: returning an :class:`~django.http.HttpResponse` object containing the content for the requested page, or raising an exception such as :exc:`~django.http.Http404`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012005Z" creationid="miurahr" creationdate="20150809T012005Z">
        <seg>各ビューには二つの役割があります: 一つはリクエストされたページのコ ンテンツを含む :class:`~django.http.HttpResponse` オブジェクトを返すこと、もう一つは :exc:`~django.http.Http404` のような例外の送出です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Email the package to a friend.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>パッケージを友人にメールで送る</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enjoy the free API</seg>
      </tuv>
      <tuv lang="JA">
        <seg>自動生成される API で楽しむ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enter the admin site</seg>
      </tuv>
      <tuv lang="JA">
        <seg>admin サイトに入る</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enter your desired username and press enter.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T024734Z" creationid="miurahr" creationdate="20150809T024734Z">
        <seg>ユーザー名とパスワードを入力し、エンターを押下してください:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Entry "detail" page -- permalink page for a single entry.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>エントリー詳細ページ - 1エントリーへのパーマリンク (permalink) ページ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exceptions</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T054433Z" creationid="miurahr" creationdate="20150813T054433Z">
        <seg>例外</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Explore the free admin functionality</seg>
      </tuv>
      <tuv lang="JA">
        <seg>admin の機能を探究してみる</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, Django uses the concept of "template inheritance".</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T135438Z" creationid="miurahr" creationdate="20150817T135438Z">
        <seg>さらには、Djangoは、"template inheritance"のコンセプトを利用しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, a performance note: these regular expressions are compiled the first time the URLconf module is loaded.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021856Z" creationid="miurahr" creationdate="20150809T021856Z">
        <seg>パフォーマンスノート: 正規表現は URLconf モジュールが読み込まれた最初にコンパイルされるので、</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Find the ``AdminURLFieldWidget`` class on line 302 and add the following ``render`` method after the existing ``__init__`` method::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234230Z" creationid="miurahr" creationdate="20150811T234230Z">
        <seg>302行目にある ``AdminURLFieldWidget`` クラスを見つけて､以下の ``render`` メソッドをすでにある ``__init__`` メソッドの下に追加してください::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finding your first real ticket</seg>
      </tuv>
      <tuv lang="JA">
        <seg>実際にチケットを探してみましょう</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First time contributors should also read Django's :doc:`documentation for first time contributors&lt;/internals/contributing/new-contributors/&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014307Z" creationid="miurahr" creationdate="20150809T014307Z">
        <seg>Django への初めての貢献者は :doc:`初めての貢献者へのドキュメント &lt;/internals/contributing/new-contributors/&gt;` を読んでください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First we'll need to create a user who can login to the admin site.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T024704Z" creationid="miurahr" creationdate="20150809T024704Z">
        <seg>まず、管理サイトにログインできるユーザを作る必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>First, open the ``polls/urls.py`` URLconf and change it like so:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021341Z" creationid="miurahr" creationdate="20150809T021341Z">
        <seg>まず、``polls/urls.py`` ファイルを開いてURLconf を次のように変更します:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For bug fix patches, this means writing a regression test to ensure that the bug is never reintroduced into Django later on.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233808Z" creationid="miurahr" creationdate="20150811T233808Z">
        <seg>リグレッションテストを書くことで､ Django にバグを再混入していないと後に保証できます｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if a user requested the URL "/articles/2005/05/39323/", Django would call the function ``news.views.article_detail(request, '2005', '05', '39323')``.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>例えば、ユーザが "/articles/2005/05/39323/" という URL をリクエストすると、 Django は ``news.views.article_detail(request, '2005', '05', '39323')`` のような関数呼び出しを行います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, in a request to ``http://www.example.com/myapp/``, the URLconf will look for ``myapp/``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021742Z" creationid="miurahr" creationdate="20150809T021742Z">
        <seg>例えば ``http://www.example.com/myapp/`` へのリクエストでは、 URLconf は ``myapp/`` を見ます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For instance, this command starts the server on port 8080:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015711Z" creationid="miurahr" creationdate="20150809T015711Z">
        <seg>このコマンドによってポート 8080 で起動させれます:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more information on writing documentation, including an explanation of what the ``versionadded`` bit is all about, see :doc:`/internals/contributing/writing-documentation`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052750Z" creationid="miurahr" creationdate="20150808T052750Z">
        <seg>```versionadded``関係の完全な説明を含め、ドキュメントの書き方についてもっと知りたい場合は :doc:`/internals/contributing/writing-documentation` を参照してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For patches containing new features, you'll need to include tests which ensure that the new features are working correctly.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233821Z" creationid="miurahr" creationdate="20150811T233821Z">
        <seg>新機能を含むパッチでは､その新機能が正しく動作すると保証するためにテストが必要です｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For small projects, this isn't a big deal, because you can just keep the static files somewhere your web server can find it.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021616Z" creationid="miurahr" creationdate="20150809T021616Z">
        <seg>小さなプロジェクトではこのことは大きな問題になりません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the minimalists</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ミニマリストのために</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the most part though, this tutorial tries to explain as much as possible, so that it can be of use to the widest audience.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このチュートリアルでは、できるだけ多くの方が使用できるように可能な限り解説したいと思います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this tutorial and the ticket we're working on, testing against SQLite is sufficient, however, it's possible (and sometimes necessary) to :ref:`run the tests using a different database &lt;running-unit-tests-settings&gt;`.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このチュートリアルや､各チケットで作業する際は､ SQLite のテストで十分です｡しかし可能 (か必要な場合は) :ref:`他のデータベースでテストを実行する &lt;running-unit-tests-settings&gt;` を参照してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this tutorial, we expect that you have at least a basic understanding of how Django works.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233304Z" creationid="miurahr" creationdate="20150811T233304Z">
        <seg>このチュートリアルは、少なくとも Django がどのように動作しているかの基本的な理解があることを想定しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this tutorial, we'll be using ticket :ticket:`17549` as a case study, so we'll rewind Django's version history in git to before that ticket's patch was applied.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233702Z" creationid="miurahr" creationdate="20150811T233637Z">
        <seg>このチュートリアルでは、ケーススタディとして :ticket:`17549` を用います。そのために、まず Django のバージョンをパッチが適用される前の git のバージョンに戻します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For this tutorial, you'll need Git installed to download the current development version of Django and to generate patch files for the changes you make.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このチュートリアルでは、最新の Django 開発版のダウンロードとその変更のパッチファイルを生成するために Git をインストールする必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For users who wish to use `virtualenv`__, you can use::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>`virtualenv`__ を利用したい場合は、次のコマンドを使います::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fortunately, testing is a *very* big subject in computer programming, so there's lots of information out there:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051747Z" creationid="miurahr" creationdate="20150808T051747Z">
        <seg>ですが実は､テスティングはプログラミングにおいて *とても* 重要なことです｡ここではテストについて詳細に紹介します：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the command line, ``cd`` into a directory where you'd like to store your code, then run the following command:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>コマンドラインから、コードを置きたい場所に ``cd`` して、以下のコマンドを 実行してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the command line, ``cd`` into the Django ``tests/`` directory and run::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051958Z" creationid="miurahr" creationdate="20150808T051958Z">
        <seg>コマンドラインで ``tests/`` ディレクトリに ``cd`` して､以下を実行してください::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From the command line, use the ``cd`` command to navigate to the directory where you'll want your local copy of Django to live.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050507Z" creationid="miurahr" creationdate="20150808T050507Z">
        <seg>コマンドラインで、 ``cd`` コマンドを使い、Django をローカルに複製するディレクトリに移動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Full docs for the development server can be found in the :djadmin:`runserver` reference.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>開発サーバーの詳細な説明は :djadmin:`runserver` のリファレンスを参照して下さい。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generally, a view retrieves data according to the parameters, loads a template and renders the template with the retrieved data.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T232844Z" creationid="miurahr" creationdate="20150811T232844Z">
        <seg>naGenerally, a view retrieves data according to the parameters, loads a template and renders the template with the retrieved data.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating a patch file for your changes.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>変更のパッチファイルを生成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating a patch for your changes</seg>
      </tuv>
      <tuv lang="JA">
        <seg>変更のパッチを生成する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generating patches and attaching them to Trac tickets is useful, however, since we are using git - adopting a more :doc:`git oriented workflow &lt;/internals/contributing/writing-code/working-with-git&gt;` is recommended.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053037Z" creationid="miurahr" creationdate="20150808T053037Z">
        <seg>パッチを生成して､Tracのチケットに貼り付けるのは便利ですが､ git を使っている場合は､ `git ワークフロー &lt;/internals/contributing/writing-code/working-with-git&gt;`_ の利用がオススメです｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Get the latest version of Python at https://www.python.org/download/ or with your operating system's package manager.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235046Z" creationid="miurahr" creationdate="20150811T235046Z">
        <seg>Pythonの最新版は https://www.python.org/download/ から入手できますし、利用中のOSのパッケージ管理ソフトから入れることもできるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting a copy of Django's development version</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django 開発版の複製を取得</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Getting started</seg>
      </tuv>
      <tuv lang="JA">
        <seg>さぁ始めましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>GitHub has a `nice tutorial`__.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045730Z" creationid="miurahr" creationdate="20150808T045730Z">
        <seg>GitHub には `素敵なチュートリアル`__ があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Go ahead and add the ``smart_urlquote`` import at the end of line 13 of ``django/contrib/admin/widgets.py`` so it looks as follows::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052314Z" creationid="miurahr" creationdate="20150808T052314Z">
        <seg>``smartr_urlquote`` のインポートを ``django/contrib/admin/widgets.py`` の 13 行目の後ろに追加してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's a quick example:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T000119Z" creationid="miurahr" creationdate="20150812T000119Z">
        <seg>これは簡単な例です：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example view for ``year_archive`` from above:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001426Z" creationid="miurahr" creationdate="20150812T001426Z">
        <seg>ここで上記の``year_archive``のビューを見てみましょう:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an informal overview of how to write a database-driven Web app with Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015108Z" creationid="miurahr" creationdate="20150809T015108Z">
        <seg>ここでは Django による データベース中心の Web アプリケーション開発をざっと見てみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's what a URLconf might look like for the ``Reporter``/``Article`` example above:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T135334Z" creationid="miurahr" creationdate="20150817T135334Z">
        <seg>ここで、URLconfが上記の ``Reporter``/``Article``の例でどのようになるか見てみましょう：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's what happens if a user goes to "/polls/34/" in this system:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このシステムでユーザが "/polls/34/" にアクセスすると、次のように処 理されます:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's what it looks like at this point:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ここでは以下のようになります:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's what that might look like:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015455Z" creationid="miurahr" creationdate="20150809T015455Z">
        <seg>テンプレートは以下のように書かれています:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's what the "base.html" template, including the use of :doc:`static files &lt;/howto/static-files/index&gt;`, might look like:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ここでよくある“base.html” テンプレートで、 :doc:`静的ファイルの配信 &lt;/howto/static-files/index&gt;` を含む例をあげます:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How to download a development copy of Django.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>開発版の Django の複製をダウンロード</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, in bigger projects -- especially those comprised of multiple apps -- dealing with the multiple sets of static files provided by each application starts to get tricky.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021621Z" creationid="miurahr" creationdate="20150809T021621Z">
        <seg>Web サーバが見つけられる場所で静的ファイルを単に管理することができるからです。しかし、もっと大きな プロジェクトで、特に複数のアプリケーションからなる場合は、各アプリケーションが 持っている静的ファイルの集まりを複数扱うことになり、ややこしくなってきます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the task of writing tests is a lot more fulfilling than spending hours testing your application manually or trying to identify the cause of a newly-introduced problem.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T055324Z" creationid="miurahr" creationdate="20150817T055324Z">
        <seg>However, the task of writing tests is a lot more fulfilling than spending hours testing your application manually or trying to identify the cause of a newly-introduced problem.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you'll probably want to read some more about these different tools if you plan on contributing to Django regularly.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233506Z" creationid="miurahr" creationdate="20150811T233506Z">
        <seg>しかし、Django に定期的に貢献したい場合は、このツールの詳細について知りたいかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a template doesn't exist in the first directory, it checks the second, and so on.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001642Z" creationid="miurahr" creationdate="20150812T001642Z">
        <seg>最初のディレクトリにテンプレートが見つからなければ、２番目、３番目と見ていきます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If all of the tests passed, then you'll want to make sure that you added the new test shown above to the appropriate folder and class.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052103Z" creationid="miurahr" creationdate="20150808T052103Z">
        <seg>テストがすべて通れば､上記した新しいテストを正しいフォルダ､クラスに追加したことを確認してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If all the tests still pass, then you can be reasonably sure that your changes haven't completely broken Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014536Z" creationid="miurahr" creationdate="20150809T014536Z">
        <seg>すべてのテストに合格した場合は、その変更により Django が壊れていないことが確認できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If at this point, instead of the above login page, you get an error page reporting something like::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>もしこの時点で、上のログイン画面の代わりに以下のようなエラーの画面が表示された場合は:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If it doesn't, make sure you correctly modified the ``AdminURLFieldWidget`` class as shown above and copied the new tests correctly.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052336Z" creationid="miurahr" creationdate="20150808T052336Z">
        <seg>もしそうでない場合､ ``AdminURLFieldWidgt`` クラスと新しいテストが正しくコピーされているされていると確認してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If that's not quite your style, there are many other `books about Python`_.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234704Z" creationid="miurahr" creationdate="20150811T234704Z">
        <seg>その方法が肌に合わない場合は、他にも `books about Python`_があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the patch's content looked okay, you can run the following command to save the patch file to your current working directory::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052915Z" creationid="miurahr" creationdate="20150808T052915Z">
        <seg>パッチの内容が良さそうなら､以下のコマンドを実行して､現在のワーキングディレクトリにパッチを保存してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the regex uses simple captures, values are passed as positional arguments; if it uses named captures, values are passed as keyword arguments.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021929Z" creationid="miurahr" creationdate="20150809T021929Z">
        <seg>正規表現が単純にキャプチャをしている場合は位置引数として、名前付きでキャプチャしている場合はキーワード引数として呼び出します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the tests ran correctly, you should see three failures corresponding to each of the test methods we added.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052052Z" creationid="miurahr" creationdate="20150808T052052Z">
        <seg>テストが正しく実行されれば､追加したテストメソッドに対応する3つのテストが失敗するでしょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If this is your first time using Django, you'll have to take care of some initial setup.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053625Z" creationid="miurahr" creationdate="20150808T053625Z">
        <seg>初めて Django を使うのなら、最初のセットアップを行う必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you already know a few other languages and want to get up to speed with Python quickly, we recommend `Dive Into Python`_.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234323Z" creationid="miurahr" creationdate="20150811T234323Z">
        <seg>すでに他の言語を既に知っていて、Pythonを素早く理解したい場合は、 `Dive Into Python`_を推薦します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you are upgrading your installation of Django from a previous version, you will need to :ref:`uninstall the old Django version before installing the new version &lt;removing-old-versions-of-django&gt;`.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>前バージョンの Django をアップグレードするには、 :ref:`新しい Django をインストールする前に、古いバージョンの Django をアンインストールする &lt;removing-old-versions-of-django&gt;` 必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you click to view a particular build, you can view the "Configuration Matrix" which shows failures broken down by Python version and database backend.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051441Z" creationid="miurahr" creationdate="20150808T051441Z">
        <seg>各ビルドについてのリンクをクリックすれば､ "Configuration Matrix" という､ 各 Python のバージョン､ DB バックエンドに対応したテストの失敗を閲覧できます｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you do either of the first two steps, keep an eye out for parts of the documentation marked **new in development version**.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015011Z" creationid="miurahr" creationdate="20150809T015011Z">
        <seg>初め 2 ステップのどちらかをした場合は、ドキュメントの **new in development version** とマークされた部分に気をつけてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you get failures or errors make sure you've followed all of the previous steps properly.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051314Z" creationid="miurahr" creationdate="20150808T051314Z">
        <seg>もし失敗するかエラーが起こる場合は､これまでの全ステップを適切に実行してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you get messages saying that this command could not be found, you'll have to download and install it, see `Git's download page`__.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050230Z" creationid="miurahr" creationdate="20150808T050230Z">
        <seg>もし、コマンドがない、というメッセージが出た場合は、ダウンロードしてインストールの必要があるでしょう。 `Git's download page`__を見てください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have difficulty finding where the Django source files are located on your system, run the following command:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django のソースファイルがシステム中のどこにあるのか分からない場合は、以下のコマンドを実行してください:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you haven't recently completed Tutorials 1â6, we encourage you to review these so that your example project matches the one described below.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ç´è¿ã®ãã¥ã¼ããªã¢ã« 1 - 6 ãçµãã£ã¦ããªããªããä¸ç®éããã¨ããããããã¾ããä¾ã§ä½ã£ããã­ã¸ã§ã¯ããä»¥ä¸ã®èª¬æã§ãä½¿ãããããã§ãã</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you haven't recently completed Tutorials 1–6, we encourage you to review these so that your example project matches the one described below.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>直近のチュートリアル 1 - 6 が終わっていないなら、一目通すことをおすすめします。例で作ったプロジェクトが以下の説明でも使われるからです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you just want to get started already (and nobody would blame you!), try taking a look at the list of `easy tickets that need patches`__ and the `easy tickets that have patches which need improvement`__.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014154Z" creationid="miurahr" creationdate="20150809T014154Z">
        <seg>今すぐ始めたいなら (責める人はいません！)、　`パッチが必要な簡単なチケット`__ か `パッチに改善が必要な簡単なチケット`__ を見つけましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need help with regular expressions, see `Wikipedia's entry`_ and the documentation of the :mod:`re` module.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021804Z" creationid="miurahr" creationdate="20150809T021804Z">
        <seg>正規表現についてわからないことがあれば `Wikipediaのエントリー`_ と :mod:`re` モジュールのドキュメントを参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you use Jython_ (a Python implementation for the Java platform), you'll need to follow a few additional steps.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014907Z" creationid="miurahr" creationdate="20150809T014907Z">
        <seg>もし Jython_ (Python のJava プラットフォーム実装) を使っている場合は、いくつか追加のステップを実行する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to change the server's port, pass it as a command-line argument.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015658Z" creationid="miurahr" creationdate="20150809T015658Z">
        <seg>サーバーのポートを変えたい場合は、以下のようにコマンドライン引数を渡してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want to remove the added slot, you can click on the X to the top right of the added slot.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020243Z" creationid="miurahr" creationdate="20150809T020243Z">
        <seg>追加されたスロットを削除したい場合は、追加されたスロット右上の 'X' をクリックしてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're familiar with writing tests, you can also look at the list of `easy tickets that need tests`__.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014202Z" creationid="miurahr" creationdate="20150809T014202Z">
        <seg>テストを書きなれているなら `テストが必要な簡単なチケット`__ でもよいでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're having trouble going through this tutorial, please post a message to |django-developers| or drop by `#django-dev on irc.freenode.net`__ to chat with other Django users who might be able to help.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233610Z" creationid="miurahr" creationdate="20150811T233610Z">
        <seg>もしこのチュートリアルを通じて理解できないことについては、 |django-developers| にメッセージを送るか `#django-dev on irc.freenode.net`__ で他の Django ユーザーとのチャットが助けになるかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're new to Python_, you might want to start by getting an idea of what the language is like.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014801Z" creationid="miurahr" creationdate="20150809T014801Z">
        <seg>Python_ の初心者なら、まず Python がどんなものかを知ることから始めましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're new to programming entirely, you might want to start with this `list of Python resources for non-programmers`_</seg>
      </tuv>
      <tuv lang="JA">
        <seg>プログラミング全般の初心者なら、 `非プログラマのための Python リソース一覧`_ から始めてみるとよいでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're not that familiar with Git, you can always find out more about its commands (once it's installed) by typing ``git help`` into the command line.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>もし Git について詳しく知らない場合は、(インストール後に) コマンドラインから ``git help`` と入力するとコマンドの使い方を確認できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're on Windows, the above should work provided that you are using "Git Bash" provided by the default Git install.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045723Z" creationid="miurahr" creationdate="20150808T045723Z">
        <seg>Windows の場合は、Git のデフォルトインストールで提供される "Git Bash" を使用することにより上記コマンドが実行できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using SQLite, you don't need to create anything beforehand - the database file will be created automatically when it is needed.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>SQLite を使っている場合は、前もってすることはありません。必要であればデータベースファイルが自動で生成されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you're using ``virtualenv``, you can omit ``PYTHONPATH=..`` when running the tests.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045828Z" creationid="miurahr" creationdate="20150808T045828Z">
        <seg>もし ``virtualenv`` を利用している場合は、テストの実行に ``PYTHONPATH=..`` のステップは不要です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you've got questions, it's probably got the answers.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050004Z" creationid="miurahr" creationdate="20150808T050004Z">
        <seg>あなたの疑問への答えが見つかるはずです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you've never had to deal with tests before, they can look a little hard to write at first glance.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051643Z" creationid="miurahr" creationdate="20150808T051643Z">
        <seg>テストを書いたとこがない場合は､最初は難しく見えるかもしれません｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you've never run Django's test suite before, it's a good idea to run it once beforehand just to get familiar with what its output is supposed to look like.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014457Z" creationid="miurahr" creationdate="20150809T014457Z">
        <seg>Django のテストスイートを実行したことが一度もない場合、その出力結果を把握しておくために、一度テストスイートを実行しておくことを推奨します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your background is in plain old PHP (with no use of modern frameworks), you're probably used to putting code under the Web server's document root (in a place such as ``/var/www``).</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053446Z" creationid="miurahr" creationdate="20150808T053446Z">
        <seg>(モダンなフレームワークを使わない) 古いプレーンな PHP の経験があるなら、これまでは Web サーバのドキュメントルート下 (``/var/www`` といった場所) にコードを配置してきたことでしょう。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If your new tests don't fail, you'll need to fix them so that they do.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233913Z" creationid="miurahr" creationdate="20150811T233913Z">
        <seg>新しいテストが落ちない場合は落ちるよう修正しましょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Django, we refer to these files as "static files".</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021613Z" creationid="miurahr" creationdate="20150809T021613Z">
        <seg>Djangoでは、これらのファイルを "静的ファイル" と呼びます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a more sophisticated application, you might have dozens of complex interactions between components.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023508Z" creationid="miurahr" creationdate="20150809T023508Z">
        <seg>高機能なアプリケーションでは、コンポーネント間で複雑な連携が数多くあるかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a nutshell, this means that code you develop against a 1.X version of Django will continue to work with future 1.X releases.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T054225Z" creationid="miurahr" creationdate="20150813T054225Z">
        <seg>簡単にいうと、これは、Django １．Xバージョンに対して開発したコードは、 将来の1.Xバージョンに対して、継続的に動作するということを意味しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a request to ``http://www.example.com/myapp/?page=3``, the URLconf will also look for ``myapp/``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021751Z" creationid="miurahr" creationdate="20150809T021751Z">
        <seg>``http://www.example.com/myapp/?page=3`` の場も同じく、 URLconf は ``myapp/`` を見ます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In addition, you should have a good understanding of Python itself.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233331Z" creationid="miurahr" creationdate="20150811T233331Z">
        <seg>また、Python 自体をよく理解している必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In fact, complex regexes can have poor lookup performance, so you probably shouldn't rely on the full power of regexes.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021842Z" creationid="miurahr" creationdate="20150809T021842Z">
        <seg>それに複雑な正規表現はルックアップのパフォーマンスが悪いので、正規表現のフルパワーに依存するのはよくありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, everything covered in the documentation -- with the exception of anything in the :doc:`internals area &lt;/internals/index&gt;` is considered stable.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T054429Z" creationid="miurahr" creationdate="20150813T054429Z">
        <seg>一般的に言って、:doc:`internals area &lt;/internals/index&gt;` を除いて、ドキュメントに記載されているものは全て、安定であると考えられます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In most cases, for a patch to be accepted into Django it has to include tests.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233759Z" creationid="miurahr" creationdate="20150811T233759Z">
        <seg>大抵の場合､ Django にアクセプトされるパッチはテストを含んでいます｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to resolve this ticket, we'll add a ``render`` method to the ``AdminURLFieldWidget`` in order to display a clickable link above the input widget.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051606Z" creationid="miurahr" creationdate="20150808T051606Z">
        <seg>このチケットを解決するには､ ``render`` メソッドを ``AdminURLFieldWidget`` に追加します｡ input ウィジェットの上にクリック可能なリンクをするようにします｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In our poll application, we'll have the following four views:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>投票アプリケーションでは、以下4つのビューを作成します:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In practice, however, you don't need to be an expert on regular expressions, as you really only need to know how to capture simple patterns.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021830Z" creationid="miurahr" creationdate="20150809T021830Z">
        <seg>しかし実際問題としては、正規表現のエキスパートになる必要はありません。単純なパターンをキャプチャする方法を知っていれば十分です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In short, all POST forms that are targeted at internal URLs should use the :ttag:`{% csrf_token %}&lt;csrf_token&gt;` template tag.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020952Z" creationid="miurahr" creationdate="20150809T020952Z">
        <seg>手短に言うと、全ての自サイトへの  POST フォームに、 :ttag:`{% csrf_token %}&lt;csrf_token&gt;` テンプレートタグを使います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the ``polls/urls.py`` file include the following code:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>``polls/urls.py`` ファイルには以下のコードを書いてください:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In this case, the date filter formats a Python datetime object in the given format (as found in PHP's date function).</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T002010Z" creationid="miurahr" creationdate="20150812T002010Z">
        <seg>この例では、フィルタによって Python の datetime オブジェクトを指定の形式にフォーマットしています (PHP の date 関数に似ていますね) 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In your Django settings, you specify a list of directories to check for templates with :setting:`DIRS &lt;TEMPLATES-DIRS&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001612Z" creationid="miurahr" creationdate="20150812T001612Z">
        <seg>Django設定の :setting:`DIRS &lt;TEMPLATES-DIRS&gt;`で、ディレクトリーのリストを定義することで、テンプレートを探す場所を指定できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Install Django</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django をインストールする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Install Python</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Python をインストールする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Install a version of Django :doc:`provided by your operating system distribution &lt;/misc/distributions&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014936Z" creationid="miurahr" creationdate="20150809T014936Z">
        <seg>:doc:`OSディストリビューションに提供される &lt;/misc/distributions&gt;`  Django のバージョンをインストールします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Install it</seg>
      </tuv>
      <tuv lang="JA">
        <seg>モデルのインストール</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing Git</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Git のインストール</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing Git.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Git のインストール</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing Python packages with virtualenv</seg>
      </tuv>
      <tuv lang="JA">
        <seg>virtualenv に Python パッケージをインストールする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Installing some prerequisites</seg>
      </tuv>
      <tuv lang="JA">
        <seg>事前に必要な物をインストールする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of using that, you can hard-code links to object-specific admin pages in whatever way you think is best.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020640Z" creationid="miurahr" creationdate="20150809T020640Z">
        <seg>ベストだと思うなら、これを使う代わりに、オブジェクト固有の管理ページヘのリンクをハードコードをしてもよいです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interested in giving back to the community a little?</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150729T004530Z" creationid="miurahr" creationdate="20150729T004530Z">
        <seg>少しでもコミュニティへ恩返しをしたいと思われますか?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introducing automated testing</seg>
      </tuv>
      <tuv lang="JA">
        <seg>自動テストの導入</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Introduction</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150729T004538Z" creationid="miurahr" creationdate="20150729T004538Z">
        <seg>はじめに</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can generate a PDF file, output XML, create a ZIP file on the fly, anything you want, using whatever Python libraries you want.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012122Z" creationid="miurahr" creationdate="20150809T012049Z">
        <seg>PDF ファイルを生成しても、 XML を出力しても、 ZIP ファイルをその場で生成してもかまいません。Python ライブラリを使ってやりたいことを何でも実現できます。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can use a template system such as Django's -- or a third-party Python template system -- or not.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012035Z" creationid="miurahr" creationdate="20150809T012035Z">
        <seg>Django のテンプレートシステム、あるいはサードパーティの Python テンプ レートシステムを使ってもよいですし、使わなくてもかまいません。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It contains a ton of useful information and should be your first source for answering any questions you might have.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014330Z" creationid="miurahr" creationdate="20150809T014330Z">
        <seg>そこにはたくさん有用な情報がありまし､質問があれば､このドキュメントが1番役に立ちます｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It contains lots of great information and is a must read for anyone who'd like to become a regular contributor to Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045936Z" creationid="miurahr" creationdate="20150808T045936Z">
        <seg>このドキュメントには、多くの重要な情報が含まれており、Django に定期的に貢献したい方は是非一読してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It covers Trac etiquette, how to claim tickets for yourself, expected coding style for patches, and many other important details.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014259Z" creationid="miurahr" creationdate="20150809T014259Z">
        <seg>Trac でのエチケットやチケットをクレームする方法やパッチに適切なコーディングスタイルなど､重要なことを網羅できます｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It has lots of good advice for those of us who are new to helping out with Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014312Z" creationid="miurahr" creationdate="20150809T014312Z">
        <seg>Django に初めて協力する人たちへの良いアドバイスがあります｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It worked!</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015615Z" creationid="miurahr" creationdate="20150809T015615Z">
        <seg>やりましたね！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It works like this: There are three slots for related Choices -- as specified by ``extra`` -- and each time you come back to the "Change" page for an already-created object, you get another three extra slots.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>変わった点をみてみましょう。リレーション相手である ``Choice`` を表示するために 3 つのスロットがあります (``extra`` に指定した数ですね)。また、作成済みのオブジェクトを「編集する」ページに行けば、いつでも 3 つ余分のスロットが表示されるはずです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It'll consist of two parts:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Poll アプリケーションは 2 つの部分からなります:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It'll run the ``detail()`` method and display whatever ID you provide in the URL.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022038Z" creationid="miurahr" creationdate="20150809T022038Z">
        <seg>``detail()`` メソッドが実行され、URLで提供したIDが表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's as easy as registering your model in the admin site:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T135257Z" creationid="miurahr" creationdate="20150817T135257Z">
        <seg>管理サイトで、モデルの登録を行うのと同じくらいの簡単さです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's for site managers.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023710Z" creationid="miurahr" creationdate="20150809T023710Z">
        <seg> </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's not a good idea to put any of this Python code within your Web server's document root, because it risks the possibility that people may be able to view your code over the Web.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053544Z" creationid="miurahr" creationdate="20150808T053532Z">
        <seg>Python コードを Web サーバーのドキュメントルート下に置かないでください｡コードをドキュメントルート下に置くと、 誰かがコードを Web を介して読めるようになってしまうからです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's not displayed on the admin index page.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012350Z" creationid="miurahr" creationdate="20150809T012350Z">
        <seg>admin のインデクスページを見ても表示されていませんね。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's silly.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023039Z" creationid="miurahr" creationdate="20150809T023000Z">
        <seg>ばかげています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's useful for URLField to give you a way to open the URL; otherwise you might as well use a CharField.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>URLField は URL を開けるようにするのに便利です; CharField を使ってもかまいません｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just remember to follow the guidelines about claiming tickets that were mentioned in the link to Django's documentation on :doc:`claiming tickets and submitting patches &lt;/internals/contributing/writing-code/submitting-patches&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014217Z" creationid="miurahr" creationdate="20150809T014217Z">
        <seg>ただ、チケットのクレームに関するガイドラインに従ってください。 Django ドキュメントの :doc:`チケットをクレームしてパッチを送る &lt;/internals/contributing/writing-code/submitting-patches&gt;` で記述されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's create a real version.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021037Z" creationid="miurahr" creationdate="20150809T021037Z">
        <seg>今度は、本物を実装しましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's learn by example.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>さあ、例を交えながら学んでゆきましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's look at what :djadmin:`startproject` created::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:djadmin:`startproject` が何を作成したかをみてみましょう::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's run all the tests in the ``model_forms_regress`` folder to make sure that's really what happens.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051933Z" creationid="miurahr" creationdate="20150808T051933Z">
        <seg> ``model__forms_regress`` フォルダの全テストを走らせて､実際に何が起こるか観てみましょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's say the ``news/year_archive.html`` template was found.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015443Z" creationid="miurahr" creationdate="20150809T015443Z">
        <seg>さて、 ``news/year_archive.html`` が見つかったとしましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Let's update our poll detail template ("polls/detail.html") from the last tutorial, so that the template contains an HTML ``&lt;form&gt;`` element:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>それでは、前回のチュートリアルで作成した投票詳細テンプレート ("polls/detail.html") を更新して、HTML の ``&lt;form&gt;`` 要素を入れましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Make the poll app modifiable in the admin</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Poll アプリを admin 上で編集できるようにする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many other things might go wrong with our application in the future, but we can be sure that we won't inadvertently reintroduce this bug, because simply running the test will warn us immediately.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T060432Z" creationid="miurahr" creationdate="20150817T060432Z">
        <seg>Many other things might go wrong with our application in the future, but we can be sure that we won't inadvertently reintroduce this bug, because simply running the test will warn us immediately.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Maybe you've found a bug in Django that you'd like to see fixed, or maybe there's a small feature you want added.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150729T004512Z" creationid="miurahr" creationdate="20150729T004512Z">
        <seg>それは Django の簡単なバグフィックスや小さな機能追加かもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Meanwhile, ``x`` and ``s`` indicated expected failures and skipped tests, respectively.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051216Z" creationid="miurahr" creationdate="20150808T051216Z">
        <seg>``x`` と ``s`` はそれぞれ期待する失敗とスキップを表しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Models</seg>
      </tuv>
      <tuv lang="JA">
        <seg>モデル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifying the user libraries can affect other Python software on your system.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ユーザーライブラリの変更はシステム上の他の Python ソフトウェアに影響を与えるおそれがあります</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Month-based archive page -- displays all days with entries in the given month.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>月ごとのアーカイブページ - 指定された月のエントリーの日をすべて表示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More information for new contributors</seg>
      </tuv>
      <tuv lang="JA">
        <seg>新しい貢献者のための情報</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More sexy automatically-generated admin features -- this overview barely scratched the surface.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>自動生成される admin のセクシーな機能の数々。ここで紹介したのはほんの表層の一部でしかありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Move the ``polls`` directory into the ``django-polls`` directory.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>``polls`` ディレクトリを ``django-polls`` ディレクトリに移動する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Namely, you'll need to auto-generate some code that establishes a Django :term:`project` -- a collection of settings for an instance of Django, including database configuration, Django-specific options and application-specific settings.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053635Z" creationid="miurahr" creationdate="20150808T053635Z">
        <seg>通常は、 Django の :term:`プロジェクト` (:term:`project`) を構成するコードを自動生成します。プロジェクトとは、データベースの設定や Django 固有のオプション、アプリケーション固有の設定などといった、個々の Django インスタンスの設定を集めたものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Naming your URL lets you refer to it unambiguously from elsewhere in Django especially templates.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021953Z" creationid="miurahr" creationdate="20150809T021953Z">
        <seg>RL に名前付けをしておけば Django のどこからでも明確に参照できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Navigate into Django's root directory (that's the one that contains ``django``, ``docs``, ``tests``, ``AUTHORS``, etc.).</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014405Z" creationid="miurahr" creationdate="20150809T014405Z">
        <seg>Django のルートディレクトリ (このディレクトリには ``django``, ``docs``, ``tests``, ``AUTHORS``, 等が含まれています) へ移動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Navigate to Django's ``tests/regressiontests/admin_widgets/`` folder and open the ``tests.py`` file.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233047Z" creationid="miurahr" creationdate="20150811T233047Z">
        <seg>Djangoの ``tests/regressiontests/admin_widgets/``フォルダーに移動して、 ``tests.py`` ファイルを開きます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Navigate to the ``django/django/contrib/admin/`` folder and open the ``widgets.py`` file.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234215Z" creationid="miurahr" creationdate="20150811T234215Z">
        <seg>``django/django/contrib/admin`` フォルダーに行って､ ``widgets.py`` ファイルを開いてください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>New to Django?</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014739Z" creationid="miurahr" creationdate="20150809T014739Z">
        <seg>Django は初めてですか?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next we'll be adding the functionality described in ticket :ticket:`17549` to Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234148Z" creationid="miurahr" creationdate="20150811T234148Z">
        <seg>次は :ticket:`17549` で説明されている機能を Django に追加します｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, add the following at the top of ``polls/templates/polls/index.html``:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>次に、``polls/templates/polls/index.html`` の上部に追加します:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Next, run the Django command-line utility to create the database tables automatically:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>次に、データベーステーブルを自動でつくる Django のコマンドラインユーティリティを実行します:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note ``{{ article.pub_date|date:"F j, Y" }}`` uses a Unix-style "pipe" (the "|" character).</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001957Z" creationid="miurahr" creationdate="20150812T001943Z">
        <seg>``{{ article.pub_date|date:"F j, Y" }}`` で、 Unix スタイルの「パイプ」 (文字 “|”) を使っていることに注意して下さい。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that per-user installations can still affect the behavior of system tools that run as that user, so ``virtualenv`` is a more robust solution (see below).</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ユーザー単位でのインストールは依然、そのユーザーのシステムツールの振る舞いに影響をあたえます。なので ``virtualenv`` はより確実な解決になります (下記を参照してください) 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the latest Django trunk may not always be stable.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051350Z" creationid="miurahr" creationdate="20150808T051350Z">
        <seg>開発中の､最新の Django ではステーブルとは限りません｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that there is an extra "Delete?" column that allows removing rows added using the "Add Another Choice" button and rows that have already been saved.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>追加の "Delete?" カラムがあることに注意してください。 "Added Another Choice" ボタンで追加された行とすでに保存された行を削除するためにあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that these regular expressions do not search GET and POST parameters, or the domain name.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021734Z" creationid="miurahr" creationdate="20150809T021734Z">
        <seg>これらの正規表現は GET, POST のパラメータや、ドメイン名からは検索しません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that this fix also made a `small CSS change`__ to format the new widget.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052453Z" creationid="miurahr" creationdate="20150808T052453Z">
        <seg>このチケットでは `少し CSS を変更`__ して新しいウィジェットをフォーマットします｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that you can't remove the original three slots.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020250Z" creationid="miurahr" creationdate="20150809T020250Z">
        <seg>最初からある 3 つのスロットを削除できないことに注意してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note the following:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>以下に注意してください:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now "Choices" is an available option in the Django admin.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020136Z" creationid="miurahr" creationdate="20150809T020136Z">
        <seg>これで、 Django の管理サイト上で「Choice」 を選べます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now for our hands-on example.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ハンズオンでの例題</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now it's time to generate a patch file that can be uploaded to Trac or applied to another copy of Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052850Z" creationid="miurahr" creationdate="20150808T052850Z">
        <seg>Trac にアップロードされたり､他のDjangoに適応されるパッチを作りましょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now let's add a few more views to ``polls/views.py``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022012Z" creationid="miurahr" creationdate="20150809T022012Z">
        <seg>それではもう少しviewを``polls/vies.py``に追加していきましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now sit back and relax.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051048Z" creationid="miurahr" creationdate="20150808T051048Z">
        <seg>それでは一息つきましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that the server's running, visit http://127.0.0.1:8000/ with your Web browser.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015559Z" creationid="miurahr" creationdate="20150809T015559Z">
        <seg>さあ、これでサーバが起動したので、ブラウザで http://127.0.0.1:8000/ にアクセスしてみてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that you've got that under your belt, you can put those skills to good use by helping to improve Django's codebase.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053026Z" creationid="miurahr" creationdate="20150808T053026Z">
        <seg>パッチの書き方を習得したので､ Django のコードベースを改善するためにスキルを活かしましょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now that your environment -- a "project" -- is set up, you're set to start doing work.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>さあ、これで自分用の環境、すなわちプロジェクトが立ち上がり、作業にとりかかる準備ができました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, let's create a Django view that handles the submitted data and does something with it.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021002Z" creationid="miurahr" creationdate="20150809T021002Z">
        <seg>送信されたデータを処理するための Django のビューを作成しましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Now, open a Web browser and go to "/admin/" on your local domain -- e.g., http://127.0.0.1:8000/admin/.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015937Z" creationid="miurahr" creationdate="20150809T015937Z">
        <seg>次はブラウザを起動して、ローカルドメインの “/admin/” 、つまり http://127.0.0.1:8000/admin/ にアクセスします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On a similar note, you might want to customize the look and feel of the Django admin index page.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>近い話題として、 Django の admin index ページのルックアンドフィールをカスタマイズもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once one of the regexes matches, Django imports and calls the given view, which is a simple Python function.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015335Z" creationid="miurahr" creationdate="20150809T015335Z">
        <seg>一度正規表現が一致すると、 Django は Python の関数であるビュー (view) をインポートし呼び出します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once the tests complete, you should be greeted with a message informing you whether the test suite passed or failed.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051257Z" creationid="miurahr" creationdate="20150808T051257Z">
        <seg>テストが終了するとテストが成功したか､失敗したかを知らせるメッセージが表示されます｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you're done looking at the patch, hit the ``q`` key to exit back to the command line.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052903Z" creationid="miurahr" creationdate="20150808T052903Z">
        <seg>パッチを見終わったら､ ``q`` キーをタイプしたコマンドラインに戻りましょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you're done modifying Django, we need to make sure that the tests we wrote earlier pass, so we can see whether the code we wrote above is working correctly.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052223Z" creationid="miurahr" creationdate="20150808T052223Z">
        <seg>Django への変更が完了したあと､コードが正しく動作すると確認するため､先ほど書いたテストを実行してください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you're done with the tutorial, you can look through the rest of :doc:`Django's documentation on contributing&lt;/internals/contributing/index&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045928Z" creationid="miurahr" creationdate="20150808T045928Z">
        <seg>チュートリアルを終えたら、次は :doc:`Django への貢献&lt;/internals/contributing/index&gt;` を参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you're familiar with contributing to Django, you can move on to writing patches for more difficult and complicated tickets.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014134Z" creationid="miurahr" creationdate="20150809T014134Z">
        <seg>Django への貢献に慣れてきたあとは､難しく､複雑なチケットを書き始めれるでしょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you're in the shell, explore the :doc:`database API &lt;/topics/db/queries&gt;`::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>シェルに入ったら :doc:`データベース API &lt;/topics/db/queries&gt;` の世界を探検してみましょう::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you've looked through some of that information, you'll be ready to go out and find a ticket of your own to write a patch for.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012708Z" creationid="miurahr" creationdate="20150809T012708Z">
        <seg>ドキュメントをたくさん読んだ後は､実際のパッチを書けるのでチケットを探してみましょう｡ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once you've verified that your patch and your test are working correctly, it's a good idea to run the entire Django test suite just to verify that your change hasn't introduced any bugs into other areas of Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052354Z" creationid="miurahr" creationdate="20150808T052354Z">
        <seg>パッチとテストが正しく動作していることを確認できたら､ Django のテストをすべて走らせて､変更が Django の別の場所にバグを仕込んでいないか確認しましょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once your models are defined, Django can automatically create a professional, production ready :doc:`administrative interface &lt;/ref/contrib/admin/index&gt;` -- a Web site that lets authenticated users add, change and delete objects.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T135131Z" creationid="miurahr" creationdate="20150817T135131Z">
        <seg>モデルの定義ができたら、Djangoは、自動的にプロレベルの、商用利用可能な、許可されたユーザがオブジェクトの追加、変更、削除を行えるWebサイトである :doc:`管理インターフェース &lt;/ref/contrib/admin/index&gt;` を自動的に作成します。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One typical workflow in creating Django apps is to create models and get the admin sites up and running as fast as possible, so your staff (or clients) can start populating data.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015157Z" creationid="miurahr" creationdate="20150809T015141Z">
        <seg>作者たちが Django アプリケーションを作成するときの典型的なワークフローは、 モデルを作成し、 admin サイトを組み上げてできるだけ早期に立ち上げ、スタッフ (や顧客) がデータを投入できるようにしておいてから、</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One way to check that Django still works after you make your changes is by running Django's test suite.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014531Z" creationid="miurahr" creationdate="20150809T014531Z">
        <seg>変更後に Django の正常動作を確認するには Django のテストスイートを実行します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Oops, good thing we wrote those tests!</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052243Z" creationid="miurahr" creationdate="20150808T052243Z">
        <seg>あぁ､テストを書いていて良かったですね｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or an exception.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012148Z" creationid="miurahr" creationdate="20150809T012148Z">
        <seg>あるいは例外です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or to Web development in general?</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014742Z" creationid="miurahr" creationdate="20150809T014742Z">
        <seg>もしくは Web 開発全般で?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Our poll application is not very complex and doesn't need custom admin templates.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020426Z" creationid="miurahr" creationdate="20150809T020426Z">
        <seg>投票アプリケーションはそれほど複雑ではないので、カスタムのアドミンテンプレートは必要ないでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Packaging your app</seg>
      </tuv>
      <tuv lang="JA">
        <seg>アプリケーションをパッケージングする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Pay special attention to tickets with the "easy pickings" criterion.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012721Z" creationid="miurahr" creationdate="20150809T012721Z">
        <seg> "easy picking" タグが付いたチケットを見つけてください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Philosophy</seg>
      </tuv>
      <tuv lang="JA">
        <seg>設計哲学</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Playing with the API</seg>
      </tuv>
      <tuv lang="JA">
        <seg>API で遊んでみる</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Project-Id-Version: django-docs
Report-Msgid-Bugs-To: 
POT-Creation-Date: 2015-07-26 02:09-0500
PO-Revision-Date: 2015-07-27 09:59+0900
Last-Translator: Hiroshi Miura &lt;miurahr@linux.com&gt;
Language-Team: Japanese (http://www.transifex.com/projects/p/django-docs/language/ja/)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Language: ja
Plural-Forms: nplurals=1; plural=0;
X-Generator: Poedit 1.5.4</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T055220Z" creationid="miurahr" creationdate="20150817T055220Z">
        <seg>Project-Id-Version: django-docs
Report-Msgid-Bugs-To: 
POT-Creation-Date: 2015-07-26 02:09-0500
PO-Revision-Date: 2015-07-27 09:59+0900
Last-Translator: Hiroshi Miura &lt;miurahr@linux.com&gt;
Language-Team: Japanese (http://www.transifex.com/projects/p/django-docs/language/ja/)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Language: ja
Plural-Forms: nplurals=1; plural=0;
X-Generator: Poedit 1.5.4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Projects vs. apps</seg>
      </tuv>
      <tuv lang="JA">
        <seg>プロジェクトとアプリケーション</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Publishing your app</seg>
      </tuv>
      <tuv lang="JA">
        <seg>アプリを公開する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Put the following code in that stylesheet (``polls/static/polls/style.css``):</seg>
      </tuv>
      <tuv lang="JA">
        <seg>スタイルシートに次のコードを配置します (``polls/static/polls/style.css``):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Put your code in some directory **outside** of the document root, such as :file:`/home/mycode`.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>コードはドキュメントルートの外､例えば ``/home/mycode`` の ような場所に置きましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Python includes a lightweight database called SQLite_ so you won't need to set up a database just yet.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T234927Z" creationid="miurahr" creationdate="20150811T234927Z">
        <seg>Pythonは軽量なデータベースであるSQLite_  を備えていますので、データベースをいますぐに設定する必要がありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question "detail" page -- displays a question text, with no results but with a form to vote.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>質問 "詳細" ページ -- 結果を表示せず、質問テキストと投票フォームを表示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question "index" page -- displays the latest few questions.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>質問 "インデックス" ページ -- 最新の質問をいくつか表示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Question "results" page -- displays results for a particular question.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>質問 "結果" ページ -- 特定の質問の結果を表示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Quick install guide</seg>
      </tuv>
      <tuv lang="JA">
        <seg>クイックインストールガイド</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Re-run the tests and everything should pass.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052324Z" creationid="miurahr" creationdate="20150808T052324Z">
        <seg>再実行すればテストがすべてパスするはずです｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall from Tutorial 1 that you start the development server like so:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>チュートリアルその 1 で、開発サーバを以下のように起動したのを思い出してください:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember that we haven't actually made any modifications to ``AdminURLFieldWidget`` yet, so our tests are going to fail.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051924Z" creationid="miurahr" creationdate="20150808T051924Z">
        <seg>``AdminURLFieldWidget`` にはまだ変更を加えていませんので､テストは落ちます｡ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remember, in :doc:`Tutorial 3 &lt;/intro/tutorial03&gt;`, we created a URLconf for the polls application that includes this line:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021014Z" creationid="miurahr" creationdate="20150809T021014Z">
        <seg>:doc:`チュートリアルその 3 &lt;/intro/tutorial03&gt;` で、以下のような投票アプリケーションの URLconf を作成したことを思い出しましょう:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Remove any old versions of Django</seg>
      </tuv>
      <tuv lang="JA">
        <seg>古いバージョンの Django を削除する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reusability matters</seg>
      </tuv>
      <tuv lang="JA">
        <seg>再利用性の問題</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reviewing existing patches is also a very helpful contribution.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014729Z" creationid="miurahr" creationdate="20150809T014729Z">
        <seg>既存のパッチをレビューすることをまた素晴らしく役に立つ貢献です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Rolling back to a previous revision of Django</seg>
      </tuv>
      <tuv lang="JA">
        <seg>旧リビジョンの Django に戻す</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run the following command:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T024713Z" creationid="miurahr" creationdate="20150809T024713Z">
        <seg>次のコマンドに従ってください：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running Django's test suite for the first time</seg>
      </tuv>
      <tuv lang="JA">
        <seg>最初に Django のテストスイートを実行する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running Django's test suite for the second time</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django の テストスイートをもう一度走らせる</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running Django's test suite.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django のテストスイートの実行</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running your new test</seg>
      </tuv>
      <tuv lang="JA">
        <seg>新しいテストを走らせる</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save -- Saves changes and returns to the change-list page for this type of object.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>保存 (Save) – 変更を保存して、このモデルのチェンジリストのページに戻ります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save and add another -- Saves changes and loads a new, blank form for this type of object.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>保存してもう一つ追加 (Save and add another) – 変更を保存して、このモデルのオブジェクトを新規追加するための空の編集ページをロードします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save and continue editing -- Saves changes and reloads the admin page for this object.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>保存して編集を続ける (Save and continue editing) – 変更を保存して、このオブジェクトの編集ページをリロードします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Save these changes and start a new Python interactive shell by running ``python manage.py shell`` again::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>変更を保存して、もう一度 ``python manage.py shell`` を実行して新しい Python 対話シェルを始めましょう::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Security fixes</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T054532Z" creationid="miurahr" creationdate="20150813T054532Z">
        <seg>セキュリティ修正</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See :doc:`/howto/jython` for details.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014910Z" creationid="miurahr" creationdate="20150809T014910Z">
        <seg>詳細は :doc:`/howto/jython` を見てください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See :doc:`/internals/contributing/triaging-tickets` for details.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014735Z" creationid="miurahr" creationdate="20150809T014735Z">
        <seg>詳細は :doc:`/internals/contributing/triaging-tickets` を参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See :doc:`How to install Django &lt;/topics/install&gt;` for advice on how to remove older versions of Django and install a newer one.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>:doc:`Django のインストール方法 &lt;/topics/install&gt;` を見て、 Django の旧バージョンを削除してより新しいものをインストールしてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See :ref:`faq-python-version-support` for details.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014838Z" creationid="miurahr" creationdate="20150809T014838Z">
        <seg>詳細は :doc:`/internals/contributing/triaging-tickets` を参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See :ref:`running-unit-tests` for more information.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051333Z" creationid="miurahr" creationdate="20150808T051333Z">
        <seg>:ref:`running-unit-tests` で､よりテストについて知られます｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set up a database</seg>
      </tuv>
      <tuv lang="JA">
        <seg>データベースを設定する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since polls are in their own URLconf (``polls/urls.py``), they can be placed under "/polls/", or under "/fun_polls/", or under "/content/polls/", or any other path root, and the app will still work.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022129Z" creationid="miurahr" creationdate="20150809T022129Z">
        <seg>polls には独自の URLconf (``polls/urls.py``) を持っているので、 "/polls/" 、 "/fun_polls/" や、 "/content/polls/" といった、どんなパスルート下にも置けて、どこに置いてもきちんと動作します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since we never committed our changes locally, perform the following to get your git branch back to a good starting point::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>変更をローカルでコミットしなかった場合は､ git のブランチを始めに戻すために以下を実行してください::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since we're creating a POST form (which can have the effect of modifying data), we need to worry about Cross Site Request Forgeries.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020938Z" creationid="miurahr" creationdate="20150809T020938Z">
        <seg>POST フォーム(データを改ざんされる恐れのある) を作成しているので、クロス サイトリクエストフォージェリを心配する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since you haven't yet made any changes to Django's code, the entire test suite **should** pass.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051302Z" creationid="miurahr" creationdate="20150808T051302Z">
        <seg>まだ Django のコードに変更を加えていなければ､テストは全て **パスするはずです** ｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Site managers use the system to add news stories, events, sports scores, etc., and that content is displayed on the public site.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023634Z" creationid="miurahr" creationdate="20150809T023634Z">
        <seg>サイト管理者は新たな話題やイベント、 スポーツのスコアなどの入力にシステムを使い、コンテンツは公開用サイト上で表示されます。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Skipped tests are typically due to missing external libraries required to run the test; see :ref:`running-unit-tests-dependencies` for a list of dependencies and be sure to install any for tests related to the changes you are making (we won't need any for this tutorial).</seg>
      </tuv>
      <tuv lang="JA">
        <seg>スキップされたテストは、テストを実行するために必要な外部ライブラリがインストールされていないことが原因です; 依存については :ref:`running-unit-tests-dependencies` を参照し、関連するテストを実行してください (このチュートリアルでは必要ありません)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So what do I do next?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>次はどうしましょうか?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So why create tests, and why now?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>どうしてテストを作るのか？また、なぜ今なのか？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some :class:`~django.db.models.Field` classes have required arguments.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015801Z" creationid="miurahr" creationdate="20150809T015801Z">
        <seg>:class:`~django.db.models.Field` クラスの中には必須の引数を持つものがありま す。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes it may seem a chore to tear yourself away from your productive, creative programming work to face the unglamorous and unexciting business of writing tests, particularly when you know your code is working properly.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T055244Z" creationid="miurahr" creationdate="20150817T055244Z">
        <seg>Sometimes it may seem a chore to tear yourself away from your productive, creative programming work to face the unglamorous and unexciting business of writing tests, particularly when you know your code is working properly.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Specifically, we'll be covering the following:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050341Z" creationid="miurahr" creationdate="20150808T050341Z">
        <seg>具体的な範囲は以下の通りです:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Stable APIs</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T054249Z" creationid="miurahr" creationdate="20150813T054249Z">
        <seg>安定なAPI</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Start the development server</seg>
      </tuv>
      <tuv lang="JA">
        <seg>開発サーバーの起動</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Static file namespacing</seg>
      </tuv>
      <tuv lang="JA">
        <seg>静的ファイルの名前空間</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Take a look in your browser, at "/polls/34/".</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012331Z" creationid="miurahr" creationdate="20150809T012331Z">
        <seg>お使いのブラウザで、 "/polls/34/" を見てください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Testing your patch.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>パッチをテスト</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests are simple routines that check the operation of your code.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>テストとは単純なプログラムで、あなたのコードの動作を確認します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests don't just identify problems, they prevent them</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T060351Z" creationid="miurahr" creationdate="20150817T060351Z">
        <seg>Tests don't just identify problems, they prevent them</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tests will save you time</seg>
      </tuv>
      <tuv lang="JA">
        <seg>テストはあなたの時間を節約します</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Thankfully, you don't have to worry too hard, because Django comes with a very easy-to-use system for protecting against it.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020946Z" creationid="miurahr" creationdate="20150809T020946Z">
        <seg>ありがたいことに、 Django がこれに対応するとても使いやすい仕組みを提供してくれているので、あまり心配する必要はありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That adds a "Filter" sidebar that lets people filter the change list by the ``pub_date`` field:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>これで、「フィルタ (Filter)」サイドバーができ、チェンジリストを ``pub_date`` フィールドの値に従ってフィルタできるようになります:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That means, when somebody selects one of the radio buttons and submits the form, it'll send the POST data ``choice=#`` where # is the ID of the selected choice.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020818Z" creationid="miurahr" creationdate="20150809T020755Z">
        <seg>投票者がラジオボタンの1つを選択し、フォームを送信する場合には、POSTデータ ``choice=#`` を送信します。＃の場所には選択肢のIDが入ります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That page also includes an explanation of how to build a copy of the documentation locally, so you can preview the HTML that will be generated.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052830Z" creationid="miurahr" creationdate="20150808T052830Z">
        <seg>ここには､ ドキュメントのコピーをローカルでビルドしてみて､ HTML をプレビューする方法なども書かれています｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That phrase flags features that are only available in development versions of Django, and they likely won't work with an official release.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015022Z" creationid="miurahr" creationdate="20150809T015022Z">
        <seg>このフレーズは Django の開発版でのみ利用可能な機能であると意味しており、公式リリースではおそらく動作しません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That variable contains every installed Django app.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020633Z" creationid="miurahr" creationdate="20150809T020633Z">
        <seg>この変数はインストールされた全 Django アプリを含んでいます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That way, you could include the polls application in any new project and be assured that it would find the custom templates it needed.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020510Z" creationid="miurahr" creationdate="20150809T020458Z">
        <seg>それにより、投票アプリケーションを他のどの新しいプロジェクトに追加できます。のアプリが必要としているカスタムテンプレートを見つけることも見つけることもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That'll create a directory :file:`polls`, which is laid out like this::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このコマンドは :file:`polls` というディレクトリを作成します。中身はこのようになっています::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's it -- you can now :doc:`move onto the tutorial &lt;/intro/tutorial01&gt;`.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>これだけです。 `チュートリアルに進みましょう &lt;/intro/tutorial01&gt;` 。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's it!</seg>
      </tuv>
      <tuv lang="JA">
        <seg>これだけです!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's not good for security.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053541Z" creationid="miurahr" creationdate="20150808T053541Z">
        <seg>これは安全上良くありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's used not only in the database schema, but in validation, as we'll soon see.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015741Z" creationid="miurahr" creationdate="20150809T015741Z">
        <seg>この引数はデータベーススキーマで使われる他、後で述べるバリデーションでも使われま す。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's what ``django.contrib.staticfiles`` is for: it collects static files from each of your applications (and any other places you specify) into a single location that can easily be served in production.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>``django.contrib.staticfiles`` はまさにそのためにあります。これは静的なファイ ルを各アプリケーションから (さらに指定した別の場所からも) 一つの場所に集め、運用環境で公開しやすくするものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That's what the ``{% extends "base.html" %}`` does.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T135529Z" creationid="miurahr" creationdate="20150817T135529Z">
        <seg>``{% extends "base.html" %}``の部分が行っていることです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The "Add choice" form looks like this:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020142Z" creationid="miurahr" creationdate="20150809T020142Z">
        <seg>「Choice の追加」フォーム は以下のようになります::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The :djadmin:`migrate` command looks at all your available models and creates tables in your database for whichever tables don't already exist, as well as optionally providing :doc:`much richer schema control &lt;/topics/migrations&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T000401Z" creationid="miurahr" creationdate="20150812T000401Z">
        <seg>:djadmin:`migrate`コマンドは、定義されている全てのモデルを調べて、必要とあらばデータベースにテーブルを作成し、さらには :doc:`much richer schema control &lt;/topics/migrations&gt;`を提供もしてくれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The :doc:`data-model syntax &lt;/topics/db/models&gt;` offers many rich ways of representing your models -- so far, it's been solving many years' worth of database-schema problems.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T000053Z" creationid="miurahr" creationdate="20150812T000053Z">
        <seg>:doc:`データモデルの文法 &lt;/topics/db/models&gt;` は、豊富なモデルの表現方法を提供し、これまでのところ、長年にわたるデータベース・スキーマの問題を解決してくれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The API is created on the fly, no code generation necessary:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T000418Z" creationid="miurahr" creationdate="20150812T000418Z">
        <seg>API はオンザフライで生成され、コードを作 成する必要はありません:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The Django admin site is activated by default.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T025012Z" creationid="miurahr" creationdate="20150809T025012Z">
        <seg>Djangoの管理サイトは、既定で有効になっています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ``name`` of each radio button is ``"choice"``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020820Z" creationid="miurahr" creationdate="20150809T020820Z">
        <seg>各ラジオボタンの ``name`` は ``"choice"`` です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ``question_id='34'`` part comes from ``(?P&lt;question_id&gt;[0-9]+)``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022201Z" creationid="miurahr" creationdate="20150809T022201Z">
        <seg>``question_id='34'`` の部分は、 ``(?P&lt;question_id&gt;[0-9]+)`` から来ています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The ``value`` of each radio button is the associated question choice's ID.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020814Z" creationid="miurahr" creationdate="20150809T020814Z">
        <seg>各ラジオボタンの ``value`` は、関連する質問の選択肢のIDです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The above template displays a radio button for each question choice.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020808Z" creationid="miurahr" creationdate="20150809T020808Z">
        <seg>上のテンプレートは、各質問の選択肢のラジオボタンが表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The admin isn't intended to be used by site visitors.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023704Z" creationid="miurahr" creationdate="20150809T023704Z">
        <seg>admin はサイトの訪問者でなく、サイト管理者に使われることを意図しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The bottom part of the page gives you a couple of options:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ページの末尾の部分には操作ボタンがいくつか表示されています:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code above loads the ``news/year_archive.html`` template.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>上のコードでは ``news/article_detail.html`` という名前のテンプレートをロー ドしています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code above maps URLs, as simple `regular expressions`_, to the location of Python callback functions ("views").</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015243Z" creationid="miurahr" creationdate="20150809T015243Z">
        <seg>上のコードはシンプルな `正規表現`_ と Python のコールバック関数("ビュー")をマッピングしています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default is to display 100 items per page.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020406Z" creationid="miurahr" creationdate="20150809T020406Z">
        <seg>既定では、一ページあたり１００アイテムが表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The development server</seg>
      </tuv>
      <tuv lang="JA">
        <seg>開発用サーバー</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The different model field types (:class:`~django.db.models.DateTimeField`, :class:`~django.db.models.CharField`) correspond to the appropriate HTML input widget.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012442Z" creationid="miurahr" creationdate="20150809T012442Z">
        <seg>モデルのフィールドの型 (:class:`~django.db.models.DateTimeField` 、 :class:`~django.db.models.CharField` など) によって適切な HTML 入力ウィジェッ トが対応しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The final step is to enter your password.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T024818Z" creationid="miurahr" creationdate="20150809T024818Z">
        <seg>最後のステップは、パスワードの入力です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first step in writing a database Web app in Django is to define your models -- essentially, your database layout, with additional metadata.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django でデータベース Web アプリケーションを書くための最初のステップは、モ デルの定義です。本質的にはデータベースのレイアウトと、追加のメタデータの定義です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first step to contributing to Django is to get a copy of the source code.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050500Z" creationid="miurahr" creationdate="20150808T050500Z">
        <seg>Django への貢献の第一歩はソースコードの複製の取得から始まります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The goal of this document is to give you enough technical specifics to understand how Django works, but this isn't intended to be a tutorial or reference -- but we've got both!</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015111Z" creationid="miurahr" creationdate="20150809T015111Z">
        <seg>このドキュメントの目的は、 Django の技術的な仕様について述べ、どのように動 作するかを理解してもらうことにあり、チュートリアルやリファレンス用ではあり ません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The idea behind :func:`~django.conf.urls.include` is to make it easy to plug-and-play URLs.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022119Z" creationid="miurahr" creationdate="20150809T022119Z">
        <seg>:func:`~django.conf.urls.include` の背景にある考えは、 URL のプラグ &amp; プレイを簡単に作ることです。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The new tests check to see that the ``render`` method we'll be adding works correctly in a couple different situations.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>新しいテストでは ``render`` メソッドをチェックするもので､いくつかのシチュエーションで正しく動作することを確認します｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The patch for this ticket was written by Ulrich Petri, and it was applied to Django as `commit ac2052ebc84c45709ab5f0f25e685bf656ce79bc`__.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014352Z" creationid="miurahr" creationdate="20150809T014352Z">
        <seg>このチケットのパッチは Ulrich Petri 氏により書かれ、これは `commit ac2052ebc84c45709ab5f0f25e685bf656ce79bc`__ で Django に適用されました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The philosophy here is that your site is edited by a staff, or a client, or maybe just you -- and you don't want to have to deal with creating backend interfaces just to manage content.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>サイトの編集はスタッフ、顧客、もしくはあなた自身の手で行われるものであり、 コンテンツの管理だけのためにバックエンドインタフェースを作りたくはない、という思想がここにはあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The regular expressions use parenthesis to "capture" values from the URLs.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015318Z" creationid="miurahr" creationdate="20150809T015318Z">
        <seg>正規表現は、 URL から値を取得するために括弧を用います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The rest is up to you.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012009Z" creationid="miurahr" creationdate="20150809T012009Z">
        <seg>それ以外の処理はユーザ次第です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The template to customize is ``admin/index.html``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020618Z" creationid="miurahr" creationdate="20150809T020618Z">
        <seg>カスタマイズ対象のテンプレートは "admin/index.html" です。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The term "regex" is a commonly used short form meaning "regular expression", which is a syntax for matching patterns in strings, or in this case, url patterns.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021726Z" creationid="miurahr" creationdate="20150809T021726Z">
        <seg>"regex" という単語は省略形で、一般的に "regular expression" という意味があります。これは文字列にマッチするパターンの構文で、この場合はURLパターンにあたります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then at the Python prompt, try to import Django:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015049Z" creationid="miurahr" creationdate="20150809T015049Z">
        <seg>Python プロンプトから Django をインポートします:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then click "Save and continue editing." Then click "History" in the upper right.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012628Z" creationid="miurahr" creationdate="20150809T012628Z">
        <seg>変更したら、「保存して編集を続ける」を押します。次に、右上に ある「履歴 (History)」をクリックしてみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, Django will strip off the matching text (``"polls/"``) and send the remaining text -- ``"34/"`` -- to the 'polls.urls' URLconf for further processing which matches ``r'^(?P&lt;question_id&gt;[0-9]+)/$'`` resulting in a call to the ``detail()`` view like so::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django はマッチ部分のテキスト (``"polls/"``) を取り去り、残りのテキスト ``"34/"`` を 'polls.urls' という URLconf に送り、``r'^(?P&lt;question_id&gt;[0-9]+)/$'`` にマッチする処理をさらに行い、``detail()`` ビューが呼ばれます::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Then, develop the way data is presented to the public.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015200Z" creationid="miurahr" creationdate="20150809T015200Z">
        <seg>データを公開するための方法を開発してゆくというものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These applications are included by default as a convenience for the common case.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>これらの機能はよく使われるのでデフォルトで付属しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These files are:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ファイルはそれぞれ以下のような役割を持っています::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These tickets are often much simpler in nature and are great for first time contributors.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014116Z" creationid="miurahr" creationdate="20150809T014116Z">
        <seg>このチケットは大抵はより簡単なものなので､初めての貢献者には適切でしょう｡ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These views are slightly different, because they take an argument:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022018Z" creationid="miurahr" creationdate="20150809T022018Z">
        <seg>これから追加するviewでは引数をとります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They also can do dictionary-key lookup, index lookup and function calls.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001856Z" creationid="miurahr" creationdate="20150812T001856Z">
        <seg>辞書のキー参照や、インデックス参照、関数呼び出しにも使われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They too should fail when the new feature is not present, and then pass once it has been implemented.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233825Z" creationid="miurahr" creationdate="20150811T233825Z">
        <seg>その際も同じように､新機能が無い際には落ち､実装されてから通るテストを書くべきです｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They're super fast (as long as the lookups aren't too complex as noted above).</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021908Z" creationid="miurahr" creationdate="20150809T021908Z">
        <seg>高速に動作します (先ほど述べたように複雑すぎない場合)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Things to note here:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>以下の点に注意してください:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This code includes a few things we haven't covered yet in this tutorial:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このコードには、これまでのチュートリアルで扱っていなかったことがいくつか入っています:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This directory structure will house the poll application.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このディレクトリ構造が、 poll アプリケーションの全体像です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This example uses Django's :doc:`template system &lt;/topics/templates&gt;`, which has several powerful features but strives to stay simple enough for non-programmers to use.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>この例では Django の :doc:`テンプレートシステム &lt;/topics/templates&gt;` を使っ ています。テンプレートシステムは、強力な機能をいくつも備えながらも、非プロ グラマが使いこなせる程度に簡単な仕組みです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This image shows an added slot:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020254Z" creationid="miurahr" creationdate="20150809T020254Z">
        <seg>この画像は追加されたスロットのみで有効です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This instructs Python to look for Django in the parent directory of ``tests``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045841Z" creationid="miurahr" creationdate="20150808T045841Z">
        <seg>これは Python が Django を見に行く際に ``tests`` の親ディレクトリを見に行くようにします。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a great option to isolate your development copy of Django from the rest of your system and avoids potential package conflicts.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050835Z" creationid="miurahr" creationdate="20150808T050835Z">
        <seg>これにより Django の開発用の複製を他のシステムから分離できるため、パッケージの依存問題から開放されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a new feature, so it should be documented.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052521Z" creationid="miurahr" creationdate="20150808T052521Z">
        <seg>この機能は新しいので､ドキュメントに書かれるべきです｡ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is called a template filter, and it's a way to filter the value of a variable.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T002003Z" creationid="miurahr" creationdate="20150812T002003Z">
        <seg>これはテンプレートフィルターと呼ばれ、変数の値にフィルターをかけるためのものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is just the surface</seg>
      </tuv>
      <tuv lang="JA">
        <seg>これらはほんの一部にすぎません</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the basic concept of HTML forms.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020758Z" creationid="miurahr" creationdate="20150809T020758Z">
        <seg>これは、HTMLフォームの基本的な概念です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the best approach for most users.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235224Z" creationid="miurahr" creationdate="20150811T235224Z">
        <seg>これが、ほとんどのユーザにとって最適な方法です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the quickest option for those who have operating systems that distribute Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014938Z" creationid="miurahr" creationdate="20150809T014938Z">
        <seg>Django を配布している OS を使っている人には最速の方法です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This isn't impressive with only two fields, but for admin forms with dozens of fields, choosing an intuitive order is an important usability detail.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>二つしかフィールドがないので、あまりぱっとした変化ではありませんね。しかし admin フォームで何ダースものフィールドを操作するような場合には、直感的なフィー ルドの並び順というものはユーザビリティ上重要な要素です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This may seem daunting at first, but it's really pretty simple.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045049Z" creationid="miurahr" creationdate="20150808T045049Z">
        <seg>最初は気が重いかもしれませんが、実際はとても簡単です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means you should be comfortable going through the existing tutorials on :doc:`writing your first Django app&lt;/intro/tutorial01&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233314Z" creationid="miurahr" creationdate="20150811T233314Z">
        <seg>つまりチュートリアル :doc:`初めての Django アプリ&lt;/intro/tutorial01&gt;` を十分に理解していることを想定しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This option is for enthusiasts who want the latest-and-greatest features and aren't afraid of running brand new code.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235356Z" creationid="miurahr" creationdate="20150811T235356Z">
        <seg>最新最高の機能が使いたくて、最新コードの実行に不安のない愛好家なら、こちらの方法です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This particular change above makes the "Publication date" come before the "Question" field:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>上の例では、「Publication date」フィールドの表示位置を「Question」フィールドよりも前に変更しています:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This patch file contains all your changes and should look this:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052935Z" creationid="miurahr" creationdate="20150808T052935Z">
        <seg>このパッチは変更のすべてを含んでおり､このようになります:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This powerful feature allows you to make  global changes to the url patterns of your project while only touching a single file.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022005Z" creationid="miurahr" creationdate="20150809T022005Z">
        <seg>とくにテンプレートで有効です。この便利な機能のおかげで、プロジェクトのURLにグローバルな変更を加える場合にも1つのファイルを変更するだけで済むようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This step is only necessary if you'd like to work with a "large" database engine like PostgreSQL, MySQL, or Oracle.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014920Z" creationid="miurahr" creationdate="20150809T014920Z">
        <seg>このステップはあなたが "大きな" データベースエンジン、 PostgreSQL 、 MySQL や Oracle を使っている場合に必要です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This style of development is called `test-driven development`__ and can be applied to both entire projects and single patches.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233902Z" creationid="miurahr" creationdate="20150811T233902Z">
        <seg>この開発手法は `テスト駆動開発`__ と呼ばれ､プロジェクト全体にも単一のパッチにも適応可能です｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tells Django what type of data each field holds.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015853Z" creationid="miurahr" creationdate="20150809T015853Z">
        <seg>こうしたクラスは、各フィールドにどのようなデータ型を記憶させるか を Django に教えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tip isn't specific to Django; it's just good Web development practice.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020914Z" creationid="miurahr" creationdate="20150809T020914Z">
        <seg>これは、 Django 固有のものではなく、いわば Web 開発の王道です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial begins where :doc:`Tutorial 3 &lt;/intro/tutorial03&gt;` left off.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T011929Z" creationid="miurahr" creationdate="20150809T011929Z">
        <seg>このチュートリアルは :doc:`チュートリアル 3 &lt;/intro/tutorial03&gt;`の続きです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial begins where :doc:`Tutorial 5 &lt;/intro/tutorial05&gt;` left off.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053157Z" creationid="miurahr" creationdate="20150808T053157Z">
        <seg>このチュートリアルは :doc:`チュートリアル ５ &lt;/intro/tutorial05&gt;`の続きです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This tutorial provides basic instruction in the use of URLconfs, and you can refer to :mod:`django.core.urlresolvers` for more information.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このチュートリアルでは基本的な URLconf の使い方を紹介します。詳細については :mod:`django.core.urlresolvers` を参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will allow us to go through all of the steps involved in writing that patch from scratch, including running Django's test suite.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233711Z" creationid="miurahr" creationdate="20150811T233711Z">
        <seg>これによりスクラッチからパッチの作成、 Django のテストスイートの実行を含む全ての手順を解説します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This will display the differences between your current copy of Django (with your changes) and the revision that you initially checked out earlier in the tutorial.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>チュートリアルの初めでチェックアウトした最初のリビジョンと､(修正した) 現在の Django のコピーとの違いを表示します｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those of you who are unfamiliar with version control systems and Trac will find that this tutorial and its links include just enough information to get started.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233349Z" creationid="miurahr" creationdate="20150811T233349Z">
        <seg>バージョン管理システムと Trac をよく知らない方でも、このチュートリアルとリンク先から、始めるに十分な情報を得ることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Throughout this tutorial, we'll walk you through the creation of a basic poll application.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このチュートリアルでは、簡単な投票 (poll) アプリケーションの作成に取り組ん でもらいます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ticket :ticket:`17549` describes the following, small feature addition:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T233954Z" creationid="miurahr" creationdate="20150811T233954Z">
        <seg>チケット :ticket:`17549` は以下の軽微な機能追加をするものです:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To check whether or not you have Git installed, enter ``git`` into the command line.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050125Z" creationid="miurahr" creationdate="20150808T050125Z">
        <seg>Gitがインストールサれているかどうかわからない場合は、 ``git`` をコマンドラインに入れてみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To create your app, make sure you're in the same directory as :file:`manage.py` and type this command:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>アプリケーションを作るには、 :file:`manage.py` と同じディレクトリに入って、このコマンドを実行します:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To design URLs for an app, you create a Python module called a :doc:`URLconf &lt;/topics/http/urls&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015211Z" creationid="miurahr" creationdate="20150809T015211Z">
        <seg>特定のアプリケーション用の URL を設計するには、 `URLconf &lt;/topics/http/urls&gt;` と呼ばれる Python モジュールを一つ作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To get a look at the content of your patch, run the following command::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052857Z" creationid="miurahr" creationdate="20150808T052857Z">
        <seg>パッチの内容を見るために､以下のコマンドを実行してください::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To install such a database, consult the :ref:`database installation information &lt;database-installation&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014928Z" creationid="miurahr" creationdate="20150809T014928Z">
        <seg>これらのデータベースをインストールするには、 :ref:`データベースのインストール方法 &lt;database-installation&gt;` を参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run the entire Django test suite, ``cd`` into the Django ``tests/`` directory and run::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django の全てのテストスイートを走らせるには ``cd`` で Django の ``tests/`` ディレクトリ移動して実行してください::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run the tests in the ``admin_widgets`` folder, ``cd`` into the Django ``tests/`` directory and run::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052234Z" creationid="miurahr" creationdate="20150808T052234Z">
        <seg>Djangoの ``admin_widgets`` フォルダーに ``cd`` で移動して､以下を実行してください::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To verify that Django can be seen by Python, type ``python`` from your shell.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015039Z" creationid="miurahr" creationdate="20150809T015039Z">
        <seg>Djnago が Python から見れるか確認をするには、シェルで ``python`` とタイプして、</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Try "/polls/34/results/" and "/polls/34/vote/" too -- these will display the placeholder results and voting pages.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022058Z" creationid="miurahr" creationdate="20150809T022058Z">
        <seg>"/polls/34/results/" と "/polls/34/vote/" も試してください。結果と投票ページのプレースホルダがそれぞれ表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>URLconfs also serve to decouple URLs from Python code.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015214Z" creationid="miurahr" creationdate="20150809T015214Z">
        <seg>URLconf はまた、 URL と Python コードを脱カップ リングする働きも持っています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Up to a certain point, 'checking that it seems to work' will be a satisfactory test.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T023501Z" creationid="miurahr" creationdate="20150809T023501Z">
        <seg>ある一定の基準まで、'動くであろうことを確認すること'が十分なテストでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Upload the package on your Web site.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>自身の Web サイトにアップロードする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using ``method="post"`` (as opposed to ``method="get"``) is very important, because the act of submitting this form will alter data server-side.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020904Z" creationid="miurahr" creationdate="20150809T020904Z">
        <seg>``method="post"`` を使用する (``method="get"`` ではなく) ことは非常に重要です。なぜなら、フォームの送信はサーバ側のデータの更新につながるからです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using parentheses around a pattern "captures" the text matched by that pattern and sends it as an argument to the view function; ``?P&lt;question_id&gt;`` defines the name that will be used to identify the matched pattern; and ``[0-9]+`` is a regular expression to match a sequence of digits (i.e., a number).</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T022158Z" creationid="miurahr" creationdate="20150809T022158Z">
        <seg>パターンの前後に括弧を使用すると、そのパターンにマッチしたテキストを "キャプチャ" し、ビュー関数の引数として、それを送信します。 ``?P&lt;question_id&gt;`` はマッチしたパターンを識別するために使用する名前を定義します。 ``[0-9]+`` は一桁以上の数字(すなわち、数)にマッチする正規表現です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using your own package</seg>
      </tuv>
      <tuv lang="JA">
        <seg>自分のパッケージを使ってみる</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Variables are surrounded by double-curly braces.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001737Z" creationid="miurahr" creationdate="20150812T001737Z">
        <seg>変数は、二重鉤括弧で囲みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Verifying</seg>
      </tuv>
      <tuv lang="JA">
        <seg>動作確認</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Verifying your test now passes</seg>
      </tuv>
      <tuv lang="JA">
        <seg>テストが通ることを確認する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Views</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ビュー</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Vote action -- handles voting for a particular choice in a particular question.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>投票ページ -- 特定の質問の選択を投票として受付</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We also created a dummy implementation of the ``vote()`` function.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021025Z" creationid="miurahr" creationdate="20150809T021025Z">
        <seg>すでに、 ``vote()`` 関数のダミー実装を作成しました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We aren't going to use this feature of Django in the tutorial.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021946Z" creationid="miurahr" creationdate="20150809T021946Z">
        <seg>この機能はチュートリアルでは使いません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can consider this little portion of the application pinned down safely forever.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T060441Z" creationid="miurahr" creationdate="20150817T060441Z">
        <seg>We can consider this little portion of the application pinned down safely forever.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We can run the test suite by simply ``cd``-ing into the Django ``tests/`` directory and, if you're using GNU/Linux, Mac OS X or some other flavor of Unix, run::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>テストスイートの実行は Django の ``tests/`` ディレクトリに `cd`` で移動し、GNU/Linux, Mac OS X 等 Unix 系 OS を利用している場合は以下のコマンドを実行します::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We forgot to add the import for that method.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052305Z" creationid="miurahr" creationdate="20150808T052305Z">
        <seg>メソッドで使うモジュールのインポートを忘れていました｡ </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We have a :doc:`complete installation guide &lt;/topics/install&gt;` that covers all the possibilities; this guide will guide you to a simple, minimal installation that'll work while you walk through the introduction.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014824Z" creationid="miurahr" creationdate="20150809T014824Z">
        <seg>Django にはできることをすべてカバーした :doc:`インストールガイド &lt;/topics/install&gt;` があります。これはシンプルでミニマルなインストールガイドで、 Django の導入部分までが説明されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We set the form's ``action`` to ``{% url 'polls:vote' question.id %}``, and we set ``method="post"``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020839Z" creationid="miurahr" creationdate="20150809T020839Z">
        <seg>フォームの ``action`` を ``{% url 'polls:vote' question.id %}`` に設定し、 さらに、 ``method="post"`` を設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We'll be walking you through contributing a patch to Django for the first time.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T050306Z" creationid="miurahr" creationdate="20150808T050306Z">
        <seg>初めて Django にパッチを送る手順を詳しく解説します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We'll give an example of this in a bit.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021932Z" creationid="miurahr" creationdate="20150809T021932Z">
        <seg>少し例を提示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We'll walk you through the entire process, so you can learn by example.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045059Z" creationid="miurahr" creationdate="20150808T045059Z">
        <seg>私達がプロセス全体を詳しく解説するので、その例から学ぶことができるでしょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We're continuing the Web-poll application and will focus on simple form processing and cutting down our code.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T011947Z" creationid="miurahr" creationdate="20150809T011947Z">
        <seg>ここでは、引続き Web 投票アプリケーションの開発を例にして、簡単なフォー ム処理とコードの縮小化を中心に解説します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We're using this instead of simply typing "python", because :file:`manage.py` sets the ``DJANGO_SETTINGS_MODULE`` environment variable, which gives Django the Python import path to your :file:`mysite/settings.py` file.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>単に “python” を実行しないのは、 Django に :file:`mysite/settings.py` ファイルへの import パスを与える ``DJANGO_SETTINGS_MODULE`` の環境変数を :file:`manage.py` で設定しているからです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We've built a tested Web-poll application, and we'll now add a stylesheet and an image.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053211Z" creationid="miurahr" creationdate="20150808T053211Z">
        <seg>Web 投票アプリケーションのテストが完成したので、今度はスタイルシートや画像を追加しましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>We've included this with Django so you can develop things rapidly, without having to deal with configuring a production server -- such as Apache -- until you're ready for production.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015546Z" creationid="miurahr" creationdate="20150809T015546Z">
        <seg>Django 開発サーバは Python だけで書かれた軽量な Web サーバです。このサーバは、開発を迅速に行い、運用に適した状態になるまで Apache のような運用サーバの設定をいじらなくても良いようにするためのものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Well, you came to the right place: read this material to quickly get up and running.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014745Z" creationid="miurahr" creationdate="20150809T014745Z">
        <seg>なら、ここに来て正解ですね。ここにあるドキュメントを読んで、行動に移してみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What are automated tests?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>自動テストとは何ですか？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What does this tutorial cover?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このチュートリアルの範囲はなんですか?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's different in *automated* tests is that the testing work is done for you by the system.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021506Z" creationid="miurahr" creationdate="20150809T021506Z">
        <seg>*自動* テストが他と異なる点は、テスト作業がシステムによって実行されることです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>What's next?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>次は何をしましょうか？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When Django finds a regular expression match, Django calls the specified view function, with an :class:`~django.http.HttpRequest` object as the first argument and any “captured” values from the regular expression as other arguments.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021921Z" creationid="miurahr" creationdate="20150809T021921Z">
        <seg>Django がマッチする正規表現を見つけると、 Django は所定のビュー関数を呼び出します。その際は :class:`~django.http.HttpRequest` オブジェクトを第一引数に、その他、正規表現から「キャプチャされた」値を他の引数に関数を呼び出します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a user requests a page, Django runs through each pattern, in order, and stops at the first one that matches the requested URL.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015320Z" creationid="miurahr" creationdate="20150809T015320Z">
        <seg>ユーザがページを要求すると、 Django はそれぞれのパターンを順番にチェックし、要求された URL に最初に一致したパターンで停止します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When contributing to Django it's very important that your code changes don't introduce bugs into other areas of Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014514Z" creationid="miurahr" creationdate="20150809T014514Z">
        <seg>Django へ貢献する際、変更したコードが Django の他の領域にバグをの変更はDjangoの他の領域にバグを混入しないことが非常に重要です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When developing against trunk, you can check `Django's continuous integration builds`__ to determine if the failures are specific to your machine or if they are also present in Django's official builds.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051449Z" creationid="miurahr" creationdate="20150808T051406Z">
        <seg>トランクバージョンで開発を行う場合､ `Django の継続インテグレーションビルド`__ をチェックしてください。これで､テストの失敗があなたのマシンだけのものか､ Django 公式のビルドによるものかが分かります｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you're comfortable with the API, read :doc:`part 2 of this tutorial &lt;/intro/tutorial02&gt;` to get Django's automatic admin working.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>API を使いこなせるようになったら、 :doc:`チュートリアルその2 &lt;/intro/tutorial02&gt;` に進んで、 Django が自動生成する管理インタフェースを動かしてみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you're comfortable with the admin site, read :doc:`part 3 of this tutorial &lt;/intro/tutorial03&gt;` to start working on public poll views.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>admin サイトが満足すれば、 :doc:`チュートリアルその3 &lt;/intro/tutorial03&gt;` に進んで、公開用の投票ビューを作りましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When you're ready to start a project, you can :doc:`start with the tutorial &lt;/intro/tutorial01&gt;` or :doc:`dive right into more detailed documentation &lt;/topics/index&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015114Z" creationid="miurahr" creationdate="20150809T015114Z">
        <seg>(とはいえ、チュートリアルもリファレンスも別に用意していますよ！) プロジェクトを作成する準備ができたら、 :doc:`チュートリアルを始めれます &lt;/intro/tutorial01&gt;` 。もしくは :doc:`より詳細なドキュメントを読む &lt;/topics/index&gt;` こともできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Whenever you create a form that alters data server-side, use ``method="post"``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020912Z" creationid="miurahr" creationdate="20150809T020912Z">
        <seg>サーバ側のデータを更新するフォームを作成する場合は、 ``method="post"`` を使いましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where should this code live?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>コードはどこに置くの？</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where to get help:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>困ったときは:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Where to look for more information.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>より多くの情報を得る方法</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While Django's test suite is running, you'll see a stream of characters representing the status of each test as it's run.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051128Z" creationid="miurahr" creationdate="20150808T051128Z">
        <seg>Django のテストスイートを実行中に、各テストの状態を文字の流れで確認することができます。 </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While successfully passing the entire test suite doesn't guarantee your code is bug free, it does help identify many bugs and regressions that might otherwise go unnoticed.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052409Z" creationid="miurahr" creationdate="20150808T052409Z">
        <seg>すべてのテストが通るという事は､追加したコードがバグフリーだと保証します｡大量のバグや手戻りを発見できます｡そうでないとバグを見逃してしまうでしょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While we're here, we can further pin down the ``was_published_recently()`` method; in fact, it would be positively embarrassing if in fixing one bug we had introduced another.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150817T061043Z" creationid="miurahr" creationdate="20150817T061043Z">
        <seg>While we're here, we can further pin down the ``was_published_recently()`` method; in fact, it would be positively embarrassing if in fixing one bug we had introduced another.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Who's this tutorial for?</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このチュートリアルは誰を対象としていますか?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Why you need to create tests</seg>
      </tuv>
      <tuv lang="JA">
        <seg>なぜテストを作成せねばならないのか</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wire these new views into the ``polls.urls`` module by adding the following :func:`~django.conf.urls.url` calls:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>新しいviewを``polls.urls``に追加します。:func:`~django.conf.urls.url` 呼び出すview</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With Django, you don't do that.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T053457Z" creationid="miurahr" creationdate="20150808T053457Z">
        <seg>Django ではそうしないでください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With that ``TabularInline`` (instead of ``StackedInline``), the related objects are displayed in a more compact, table-based format:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>``StackedInline`` に変わって ``TabularInline`` を使うと、 リレーション相手のオブジェクトはよりコンパクトなテーブル形式で表示されます:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With that, you've got a free, and rich, :doc:`Python API &lt;/topics/db/queries&gt;` to access your data.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T000413Z" creationid="miurahr" creationdate="20150812T000413Z">
        <seg>これだけで、制約のない充実した :doc:`Python API &lt;/topics/db/queries&gt;` を使っ て自分のデータにアクセスできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write a simple form</seg>
      </tuv>
      <tuv lang="JA">
        <seg>簡単なフォームを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write views that actually do something</seg>
      </tuv>
      <tuv lang="JA">
        <seg>実際に動作するビューを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write your first view</seg>
      </tuv>
      <tuv lang="JA">
        <seg>はじめてのビュー作成</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Write your views</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ビューの自作</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing Documentation</seg>
      </tuv>
      <tuv lang="JA">
        <seg>ドキュメントを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing a test for your patch.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>パッチへのテストを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing more views</seg>
      </tuv>
      <tuv lang="JA">
        <seg>もっとビューを書いてみる</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing some tests for ticket #17549</seg>
      </tuv>
      <tuv lang="JA">
        <seg>チケット #17549 にテストを書いてみましょう</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing some tests for your ticket</seg>
      </tuv>
      <tuv lang="JA">
        <seg>チケットにテストを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing the code for ticket #17549</seg>
      </tuv>
      <tuv lang="JA">
        <seg>チケット #17549 にコードを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing the code for your patch.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>パッチのコードを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing the code for your ticket</seg>
      </tuv>
      <tuv lang="JA">
        <seg>チケットにコードを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your first Django app, part 1</seg>
      </tuv>
      <tuv lang="JA">
        <seg>はじめての Django アプリ作成、その 1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your first Django app, part 2</seg>
      </tuv>
      <tuv lang="JA">
        <seg>はじめての Django アプリ作成、その2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your first Django app, part 3</seg>
      </tuv>
      <tuv lang="JA">
        <seg>はじめての Django アプリ作成、その 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your first Django app, part 4</seg>
      </tuv>
      <tuv lang="JA">
        <seg>はじめての Django アプリ作成、その 4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your first Django app, part 5</seg>
      </tuv>
      <tuv lang="JA">
        <seg>はじめての Django アプリ作成、その 5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your first Django app, part 6</seg>
      </tuv>
      <tuv lang="JA">
        <seg>はじめての Django アプリ作成、その 6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Writing your first patch for Django</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django への初めてのパッチを書く</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Year-based archive page -- displays all months with entries in the given year.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>年ごとのアーカイブページ - 指定された年のエントリーの月を全て表示</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Yet.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>今はまだ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can chain together as many filters as you'd like.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T002025Z" creationid="miurahr" creationdate="20150812T002025Z">
        <seg>フィルターはいくつでも好きなだけ繋げることが出来ます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can click on the column headers to sort by those values -- except in the case of the ``was_published_recently`` header, because sorting by the output of an arbitrary method is not supported.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020324Z" creationid="miurahr" creationdate="20150809T020324Z">
        <seg>カラムのヘッダをクリックすると、カラムの値に応じてエントリを並べ換えできます。ただし ``was_published_recently`` ヘッダは例外で、これはメソッドの戻り値を 使った並べ換えをサポートしていないからです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can make the change if you'd like, but we'll skip it for now in the interest of brevity.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052500Z" creationid="miurahr" creationdate="20150808T052500Z">
        <seg>もしやりたいならやってもいいですが､ここでは省略します｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can then check out the older revision of Django that we'll be using in the tutorial below::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014421Z" creationid="miurahr" creationdate="20150809T014421Z">
        <seg>次にチュートリアルで使用する Django の旧リビジョンをチェックアウトします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can verify that Python is installed by typing ``python`` from your shell; you should see something like::</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Python がインストールされてるかを確かめるには ``python`` とシェルでタイプします。このように表示されるはずです::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can write :doc:`custom template tags &lt;/howto/custom-template-tags&gt;`, which run custom Python code behind the scenes.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T002054Z" creationid="miurahr" creationdate="20150812T002054Z">
        <seg>:doc:`カスタムテンプレートタグ&lt;/howto/custom-template-tags&gt;` を書くことも出来ます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can write :ref:`custom template filters &lt;howto-writing-custom-template-filters&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T002042Z" creationid="miurahr" creationdate="20150812T002042Z">
        <seg>また、独自の Python コードを実行する :ref:`カスタムテンプレートフィルタ &lt;howto-writing-custom-template-filters&gt;` や </seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You create a set of tests once, and then as you make changes to your app, you can check that your code still works as you originally intended, without having to perform time consuming manual testing.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T021459Z" creationid="miurahr" creationdate="20150809T021459Z">
        <seg>一度テストセットを作成すると、それからはアプリに変更を加えるたびに、あなたの意図した通りにコードが動作するか確認できます。手動でテストする時間がかかることはありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may have another version of Django installed.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>別バージョンの Django がインストールされてるかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You may want to make significant changes to the layout.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020550Z" creationid="miurahr" creationdate="20150809T020550Z">
        <seg>レイアウトに何か重要な変更をしたいかも知れません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You might encounter new bugs in the development version, but reporting them helps the development of Django.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150811T235442Z" creationid="miurahr" creationdate="20150811T235442Z">
        <seg>そのかわり、開発版では新規バグに当たることもあるでしょうが、報告することで、Djangoの開発を応援することにつながります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should make sure to read Django's documentation on :doc:`claiming tickets and submitting patches &lt;/internals/contributing/writing-code/submitting-patches&gt;`.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T014250Z" creationid="miurahr" creationdate="20150809T014250Z">
        <seg>Django のドキュメントの `チケットをクレームして､パッチを送信する &lt;/internals/contributing/writing-code/submitting-patches&gt;`_ を読んでください｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should now have a file in the root Django directory called ``17549.diff``.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052927Z" creationid="miurahr" creationdate="20150808T052927Z">
        <seg>Django のルートディレクトリに ``17549.diff`` というファイルが作られるでしょう｡</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should see the Django admin index page:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020027Z" creationid="miurahr" creationdate="20150809T020027Z">
        <seg>以下のような admin の一覧画面が表示されるはずです:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should see the admin's login screen:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015942Z" creationid="miurahr" creationdate="20150809T015942Z">
        <seg>以下のような admin のログイ ン画面が表示されるはずです:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You should still see 3 failures with the following exception::</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T052247Z" creationid="miurahr" creationdate="20150808T052247Z">
        <seg>以下のように3つテストが落ちています::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will be asked to enter your password twice, the second time as a confirmation of the first.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T024852Z" creationid="miurahr" creationdate="20150809T024852Z">
        <seg>パスワードは２回入力するように求められ、２回めが１回めと同じか、確認されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You will then be prompted for your desired email address:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T024805Z" creationid="miurahr" creationdate="20150809T024805Z">
        <seg>電子メールアドレスを入力するように促されますので、入力してください：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You won't be able to run multiple versions of this package (or others with the same name).</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このパッケージの複数バージョン (もしくは同じ名前の別のもの) を実行できません</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll follow this pattern -- create a model admin object, then pass it as the second argument to ``admin.site.register()`` -- any time you need to change the admin options for an object.</seg>
      </tuv>
      <tuv lang="JA">
        <seg>このように、 admin のオプションを変更したいときには、モデルごとに admin オブジェクトを生成して、 ``admin.site.register()`` の 2 番目の引数に渡すと いうパターンに従ってください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll see a "Welcome to Django" page, in pleasant, light-blue pastel.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015612Z" creationid="miurahr" creationdate="20150809T015612Z">
        <seg>“Welcome to Django” と表示された、明るいパステル調のライトブルーのページが出るはずです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll see a page listing all changes made to this object via the Django admin, with the timestamp and username of the person who made the change:</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012622Z" creationid="miurahr" creationdate="20150809T012622Z">
        <seg>ユーザが管理サイト上でオブジェクトに対して行った変更履歴の全てを、変更時刻と変更を行ったユーザ名付きでリストにしたページが表示されます:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll want to either switch to the older tutorial or the newer Django version.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T020004Z" creationid="miurahr" creationdate="20150809T020004Z">
        <seg>古いチュートリアルを参照するか、新しいバージョンの Django を入手してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've got three easy options to install Django:</seg>
      </tuv>
      <tuv lang="JA">
        <seg>Django をインストールするには 3 つの方法があります:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You've started the Django development server, a lightweight Web server written purely in Python.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015543Z" creationid="miurahr" creationdate="20150809T015543Z">
        <seg>これで、 Django 開発サーバを起動しました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your project and your reusable app</seg>
      </tuv>
      <tuv lang="JA">
        <seg>プロジェクトと再利用可能アプリ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Your view can read records from a database, or not.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T012027Z" creationid="miurahr" creationdate="20150809T012027Z">
        <seg>ビューはデータベースからレコードを読みだしても、読み出さなくてもかまいません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``E`` indicates that an error was raised during a test, and ``F`` indicates that a test's assertions failed.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T051143Z" creationid="miurahr" creationdate="20150808T051143Z">
        <seg>``E`` はテストにエラーが発生したことを表し、 ``F`` はテストのアサーションが失敗したことを表しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``forloop.counter`` indicates how many times the :ttag:`for` tag has gone through its loop</seg>
      </tuv>
      <tuv lang="JA">
        <seg>``forloop.counter`` は、ttag:`for` タグのループが何度実行されたかを表す値です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``virtualenv`` puts your copy of Django on the ``PYTHONPATH`` automatically.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150808T045859Z" creationid="miurahr" creationdate="20150808T045859Z">
        <seg>``virtualenv`` が自動的に Django を ``PYTHONPATH`` 上に追加します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>``{{ article.headline }}`` means "Output the value of the article's headline attribute." But dots aren't used only for attribute lookup.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150812T001831Z" creationid="miurahr" creationdate="20150812T001831Z">
        <seg>``{{ article.headline }}`` は、「articleのheadline属性を出力せよ」という意味になります。しかし、ドットは属性参照に限らず使われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>then you're probably using a version of Django that doesn't match this tutorial version.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150809T015955Z" creationid="miurahr" creationdate="20150809T015955Z">
        <seg>おそらくこのチュートリアルのバージョンとは違う Django のバージョンを 使用していることでしょう。</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
    <tu>
      <prop type="file">for_translation_django-docs_misc_ja.po</prop>
      <prop type="path"></prop>
      <tuv lang="EN-US">
        <seg>There are a few exceptions to this stability and backwards-compatibility promise.</seg>
      </tuv>
      <tuv lang="JA" changeid="miurahr" changedate="20150813T054516Z" creationid="miurahr" creationdate="20150813T054516Z">
        <seg>この安定性と広報互換性には、例外があります。</seg>
      </tuv>
    </tu>
  </body>
</tmx>
